{"version":3,"file":"makeImageData-xry5-KpU.js","sources":["../../node_modules/@jbrowse/plugin-variants/esm/MultiLinearVariantRenderer/makeImageData.js"],"sourcesContent":["import { featureSpanPx } from '@jbrowse/core/util';\nimport { checkStopToken } from '@jbrowse/core/util/stopToken';\nimport RBush from 'rbush';\nimport { f2 } from '../shared/constants';\nimport { drawColorAlleleCount } from '../shared/drawAlleleCount';\nimport { drawPhased } from '../shared/drawPhased';\nimport { getFeaturesThatPassMinorAlleleFrequencyFilter } from '../shared/minorAlleleFrequencyUtils';\nexport async function makeImageData(ctx, props) {\n    const { scrollTop, minorAlleleFrequencyFilter, sources, rowHeight, features, regions, bpPerPx, renderingMode, stopToken, } = props;\n    const region = regions[0];\n    checkStopToken(stopToken);\n    const mafs = getFeaturesThatPassMinorAlleleFrequencyFilter(features.values(), minorAlleleFrequencyFilter);\n    checkStopToken(stopToken);\n    const rbush = new RBush();\n    let start = performance.now();\n    for (const { mostFrequentAlt, feature } of mafs) {\n        if (performance.now() - start > 400) {\n            checkStopToken(stopToken);\n            start = performance.now();\n        }\n        const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx);\n        const w = Math.max(Math.round(rightPx - leftPx), 2);\n        const samp = feature.get('genotypes');\n        let y = -scrollTop;\n        const s = sources.length;\n        for (let j = 0; j < s; j++) {\n            const { name, HP } = sources[j];\n            const genotype = samp[name];\n            const x = Math.floor(leftPx);\n            const h = Math.max(rowHeight, 1);\n            if (genotype) {\n                rbush.insert({\n                    minX: x - f2,\n                    maxX: x + w + f2,\n                    minY: y - f2,\n                    maxY: y + h + f2,\n                    genotype,\n                });\n                const isPhased = genotype.includes('|');\n                if (renderingMode === 'phased') {\n                    if (isPhased) {\n                        const alleles = genotype.split('|');\n                        drawPhased(alleles, ctx, x, y, w, h, HP);\n                    }\n                    else {\n                        ctx.fillStyle = 'black';\n                        ctx.fillRect(x - f2, y - f2, w + f2, h + f2);\n                    }\n                }\n                else {\n                    const alleles = genotype.split(/[/|]/);\n                    drawColorAlleleCount(alleles, ctx, x, y, w, h, mostFrequentAlt);\n                }\n            }\n            y += rowHeight;\n        }\n    }\n    return {\n        rbush: rbush.toJSON(),\n    };\n}\n"],"names":["makeImageData","ctx","props","scrollTop","minorAlleleFrequencyFilter","sources","rowHeight","features","regions","bpPerPx","renderingMode","stopToken","region","checkStopToken","mafs","getFeaturesThatPassMinorAlleleFrequencyFilter","rbush","RBush","start","mostFrequentAlt","feature","leftPx","rightPx","featureSpanPx","w","samp","y","s","j","name","HP","genotype","x","h","f2","isPhased","alleles","drawPhased","drawColorAlleleCount"],"mappings":"uJAOO,eAAeA,EAAcC,EAAKC,EAAO,CAC5C,KAAM,CAAE,UAAAC,EAAW,2BAAAC,EAA4B,QAAAC,EAAS,UAAAC,EAAW,SAAAC,EAAU,QAAAC,EAAS,QAAAC,EAAS,cAAAC,EAAe,UAAAC,CAAY,EAAGT,EACvHU,EAASJ,EAAQ,CAAC,EACxBK,EAAeF,CAAS,EACxB,MAAMG,EAAOC,EAA8CR,EAAS,OAAM,EAAIH,CAA0B,EACxGS,EAAeF,CAAS,EACxB,MAAMK,EAAQ,IAAIC,EAClB,IAAIC,EAAQ,YAAY,IAAK,EAC7B,SAAW,CAAE,gBAAAC,EAAiB,QAAAC,CAAO,IAAMN,EAAM,CACzC,YAAY,MAAQI,EAAQ,MAC5BL,EAAeF,CAAS,EACxBO,EAAQ,YAAY,IAAK,GAE7B,KAAM,CAACG,EAAQC,CAAO,EAAIC,EAAa,cAACH,EAASR,EAAQH,CAAO,EAC1De,EAAI,KAAK,IAAI,KAAK,MAAMF,EAAUD,CAAM,EAAG,CAAC,EAC5CI,EAAOL,EAAQ,IAAI,WAAW,EACpC,IAAIM,EAAI,CAACvB,EACT,MAAMwB,EAAItB,EAAQ,OAClB,QAASuB,EAAI,EAAGA,EAAID,EAAGC,IAAK,CACxB,KAAM,CAAE,KAAAC,EAAM,GAAAC,GAAOzB,EAAQuB,CAAC,EACxBG,EAAWN,EAAKI,CAAI,EACpBG,EAAI,KAAK,MAAMX,CAAM,EACrBY,EAAI,KAAK,IAAI3B,EAAW,CAAC,EAC/B,GAAIyB,EAAU,CACVf,EAAM,OAAO,CACT,KAAMgB,EAAIE,EACV,KAAMF,EAAIR,EAAIU,EACd,KAAMR,EAAIQ,EACV,KAAMR,EAAIO,EAAIC,EACd,SAAAH,CACpB,CAAiB,EACD,MAAMI,EAAWJ,EAAS,SAAS,GAAG,EACtC,GAAIrB,IAAkB,SAClB,GAAIyB,EAAU,CACV,MAAMC,EAAUL,EAAS,MAAM,GAAG,EAClCM,EAAWD,EAASnC,EAAK+B,EAAGN,EAAGF,EAAGS,EAAGH,CAAE,CAC/D,MAEwB7B,EAAI,UAAY,QAChBA,EAAI,SAAS+B,EAAIE,EAAIR,EAAIQ,EAAIV,EAAIU,EAAID,EAAIC,CAAE,MAG9C,CACD,MAAME,EAAUL,EAAS,MAAM,MAAM,EACrCO,EAAqBF,EAASnC,EAAK+B,EAAGN,EAAGF,EAAGS,EAAGd,CAAe,CAClF,CACA,CACYO,GAAKpB,CACjB,CACA,CACI,MAAO,CACH,MAAOU,EAAM,OAAQ,CACxB,CACL","x_google_ignoreList":[0]}