const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./LaunchBreakendPanel-CIAWw8Vr.js","./index-DRDIumvF.js","./index-DnpZ9owN.css","./BaseCard-vmioy7T8.js","./VariantConsequenceDataGrid-G47zeYZs.js","./DataGrid-COGS3KN-.js","./index-erzOx3_L.js","./utils-BwPRrx3T.js","./getThemeProps-IugnyHrN.js","./MenuItem-D5kXI1eL.js","./dividerClasses-rNTJcnQi.js","./Divider-C_55-x0A.js","./Badge-D0gYdILz.js","./TableCell-Cy8GZPEs.js"])))=>i.map(i=>d[i]);
import{a as m,cV as k,j as e,aY as V,f as A,T as y,C as E,u as G,d as H,cW as B,cw as z,c as M,o as D,P as W,bn as Q,_ as $}from"./index-DRDIumvF.js";import{F as U}from"./FeatureDetails-BhZkojyM.js";import{B as N}from"./BaseCard-vmioy7T8.js";import{D as q}from"./DataGridFlexContainer-BtHzV4NV.js";import{D as L}from"./DataGrid-COGS3KN-.js";import"./index-erzOx3_L.js";import"./utils-BwPRrx3T.js";import"./getThemeProps-IugnyHrN.js";import"./MenuItem-D5kXI1eL.js";import"./dividerClasses-rNTJcnQi.js";import"./Divider-C_55-x0A.js";import"./Badge-D0gYdILz.js";import"./TableCell-Cy8GZPEs.js";function J({value:o,ref:s}){const[t,n]=m.useState(!1);return k(s,o)!==o?e.jsxs("div",{children:[e.jsx("button",{onClick:()=>{n(!t)},children:t?"Show simplified ALT":"Show raw ALT"})," ",t?o:k(s,o)]}):o}function Y({value:o}){const[s,t]=m.useState(!1),[n,r]=m.useState(!1),i=String(o);return i.length>100?e.jsxs(e.Fragment,{children:[e.jsx("button",{type:"button",onClick:()=>{V(i),r(!0),setTimeout(()=>{r(!1)},700)},children:n?"Copied to clipboard":"Copy"}),e.jsx("button",{type:"button",onClick:()=>{t(d=>!d)},children:s?"Show less":"Show more"}),e.jsx("div",{children:s?i:`${i.slice(0,100)}...`})]}):e.jsx("div",{children:i})}function O({checked:o,disabled:s,label:t,onChange:n}){return e.jsx(A,{disabled:s,control:e.jsx(E,{checked:o,onChange:n}),label:e.jsx(y,{variant:"body2",children:t})})}function K(o){return o.toPrecision(3)}function X({rows:o}){const[s,t]=m.useState(!1),n={};if(s)for(const a of o){const l={},p=a.GT.split(/[/|]/);for(const x of p)l[x]=(l[x]||0)+1;const v=Object.entries(l).map(([x,b])=>`${x}:${b}`).join(";");n[v]||(n[v]={count:0,GT:v,genotype:a.genotype}),n[v].count++}else for(const a of o){const l=a.GT;n[l]||(n[l]={count:0,GT:a.GT,genotype:a.genotype}),n[l].count++}const r=Object.entries(n).map(([a,l])=>({id:a,...l,count:`${l.count} / ${o.length}`,frequency:`${K(l.count/o.length*100)}%`})),d=(r[0]?Object.keys(r[0]):[]).map(a=>G.measureGridWidth(r.map(l=>`${l[a]}`)));return e.jsxs("div",{children:[e.jsx(A,{control:e.jsx(E,{checked:s}),label:e.jsx(y,{variant:"body2",children:"Use allele counts instead of exact GT"}),onChange:(a,l)=>{t(l)}}),e.jsx(q,{children:e.jsx(L,{rows:r,hideFooter:!0,rowHeight:25,columnHeaderHeight:35,columns:[{field:"GT",width:d[0]},{field:"count",width:d[1]},{field:"frequency",width:d[2]},{field:"genotype",width:d[3]}]})})]})}function Z({columns:o,filter:s,setFilter:t}){return e.jsxs(e.Fragment,{children:[e.jsx(y,{children:"These filters can use a plain text search or regex style query, e.g. in the genotype field, entering 1 will query for all genotypes that include the first alternate allele e.g. 0|1 or 1|1, entering [1-9]\\d* will find any non-zero allele e.g. 0|2 or 2/33"}),o.map(({field:n})=>e.jsx(H,{placeholder:`Filter ${n}`,value:s[n]||"",onChange:r=>{t({...s,[n]:r.target.value})}},`filter-${n}`))]})}function ee(o,s){if(o.size!==s.size)return!1;for(const t of o)if(!s.has(t))return!1;return!0}function te(o){var s;const{feature:t,descriptions:n={}}=o,[r,i]=m.useState({}),[d,a]=m.useState(!0),[l,p]=m.useState(!1),v=t.samples||{},x=t.ALT,b=t.REF,w=Object.entries(v).map(([c,u])=>{var f,h;return[c,{...u,GT:`${(f=u.GT)===null||f===void 0?void 0:f[0]}`,genotype:B(`${(h=u.GT)===null||h===void 0?void 0:h[0]}`,b,x)}]});let F,j=[];const T=Object.keys(r);try{j=w.map(([c,u])=>({...Object.fromEntries(Object.entries(u).map(([f,h])=>[f,h])),sample:c,id:c})).filter(c=>T.length?T.every(u=>{const f=r[u];return f?new RegExp(f,"i").exec(c[u]):!0}):!0)}catch(c){console.error(c),F=c}const S=["sample",...Object.keys(((s=w[0])===null||s===void 0?void 0:s[1])||{})],R=S.map(c=>G.measureGridWidth(j.map(u=>u[c]))),C=S.map((c,u)=>{var f,h;return{field:c,description:(h=(f=n==null?void 0:n.FORMAT)===null||f===void 0?void 0:f[c])===null||h===void 0?void 0:h.Description,width:R[u]}}),_=new Set(["sample","GT","genotype"]),I=new Set(S);return w.length?e.jsxs(e.Fragment,{children:[e.jsx(N,{...o,title:"Genotype frequencies",children:e.jsx(z.ErrorBoundary,{FallbackComponent:M.ErrorMessage,children:e.jsx(X,{rows:j})})}),e.jsxs(N,{...o,title:"Samples",children:[F?e.jsx(y,{color:"error",children:`${F}`}):null,e.jsx(O,{label:"Show filters",checked:l,onChange:c=>{p(c.target.checked)}}),ee(_,I)?null:e.jsx(O,{label:"Show only genotype columns",checked:d,onChange:c=>{a(c.target.checked)}}),l?e.jsx(Z,{setFilter:i,columns:C,filter:r}):null,e.jsx(q,{children:e.jsx(L,{rows:j,hideFooter:j.length<100,columns:d?C.filter(c=>_.has(c.field)):C,rowHeight:25,columnHeaderHeight:35,showToolbar:!0})})]})]}):null}const ne={CHROM:"chromosome: An identifier from the reference genome",POS:"position: The reference position, with the 1st base having position 1",ID:"identifier: Semi-colon separated list of unique identifiers where available",REF:"reference base(s): Each base must be one of A,C,G,T,N (case insensitive).",ALT:"alternate base(s): Comma-separated list of alternate non-reference alleles",QUAL:"quality: Phred-scaled quality score for the assertion made in ALT",FILTER:"filter status: PASS if this position has passed all filters, otherwise a semicolon-separated list of codes for filters that fail"},g=m.lazy(()=>$(()=>import("./LaunchBreakendPanel-CIAWw8Vr.js"),__vite__mapDeps([0,1,2,3]),import.meta.url)),P=m.lazy(()=>$(()=>import("./VariantConsequenceDataGrid-G47zeYZs.js"),__vite__mapDeps([4,1,2,3,5,6,7,8,9,10,11,12,13]),import.meta.url));function oe({descriptions:o,feature:s}){var t,n,r,i,d;const a=(n=(t=o==null?void 0:o.INFO)===null||t===void 0?void 0:t.ANN)===null||n===void 0?void 0:n.Description,l=((i=(r=a==null?void 0:a.match(/.*Functional annotations:'(.*)'$/))===null||r===void 0?void 0:r[1])===null||i===void 0?void 0:i.split("|"))||[],p=((d=s.INFO)===null||d===void 0?void 0:d.ANN)||[];return e.jsx(P,{fields:l,data:p,title:"Variant ANN field"})}function se({descriptions:o,feature:s}){var t,n,r,i,d;const a=(n=(t=o==null?void 0:o.INFO)===null||t===void 0?void 0:t.CSQ)===null||n===void 0?void 0:n.Description,l=((i=(r=a==null?void 0:a.match(/.*Format: (.*)/))===null||r===void 0?void 0:r[1])===null||i===void 0?void 0:i.split("|"))||[],p=((d=s.INFO)===null||d===void 0?void 0:d.CSQ)||[];return e.jsx(P,{fields:l,data:p,title:"Variant CSQ field"})}function re({model:o}){const{featureData:s}=o,t=JSON.parse(JSON.stringify(s)),{type:n=""}=t;return n==="breakend"?e.jsx(g,{feature:t,locStrings:t.ALT.map(r=>{var i;return((i=Q(r))===null||i===void 0?void 0:i.MatePosition)||""}),model:o}):n==="translocation"?e.jsx(g,{feature:t,model:o,locStrings:[`${t.INFO.CHR2[0]}:${t.INFO.END}`]}):n==="paired_feature"?e.jsx(g,{feature:t,model:o,locStrings:[`${t.mate.refName}:${t.mate.start}`]}):n.includes("inversion")||n.includes("deletion")||n.includes("duplication")||n.includes("cnv")||n.includes("sv")?e.jsx(g,{feature:{uniqueId:"random",refName:t.refName,start:t.start,end:t.start+1,mate:{refName:t.refName,start:t.end,end:t.end+1}},model:o,locStrings:[`${t.refName}:${t.end}`]}):null}const ie=D(function(o){const{feat:s,model:t}=o,{descriptions:n}=t,{samples:r,...i}=s,{REF:d}=i;return e.jsxs(W,{"data-testid":"variant-side-drawer",children:[e.jsx(U,{feature:i,descriptions:{...ne,...n},formatter:(a,l)=>l==="ALT"?e.jsx(J,{value:`${a}`,ref:d}):e.jsx(Y,{value:a}),...o}),e.jsxs(m.Suspense,{fallback:null,children:[e.jsx(se,{feature:i,descriptions:n}),e.jsx(oe,{feature:i,descriptions:n}),e.jsx(re,{model:t})]}),e.jsx(te,{feature:s,...o,descriptions:n})]})}),ye=D(function(o){const{model:s}=o,{featureData:t}=s,n=structuredClone(t);return n?e.jsx(ie,{feat:n,...o}):e.jsx("div",{children:"No feature loaded, may not be available after page refresh because it was too large for localStorage"})});export{ye as default};
//# sourceMappingURL=VariantFeatureWidget-_VELUTEP.js.map
