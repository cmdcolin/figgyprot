import{J as u,S as w,X as P,y as S,U as m,V as k,W as Q}from"./index-CGKDrrCR.js";async function B(t,a){const{rpcManager:e}=u.getSession(t),n=w.getConf(t,"numStdDev")||3,{adapterConfig:g,autoscaleType:s}=t,r=P.getRpcSessionId(t),{currStatsBpPerPx:c}=a,d={sessionId:r,adapterConfig:g,statusCallback:o=>{S(t)&&t.setMessage(o)},...a};if(s==="global"||s==="globalsd"){const o=await e.call(r,"WiggleGetGlobalQuantitativeStats",d),{scoreMin:p,scoreMean:i,scoreStdDev:l}=o;return s==="globalsd"?{...o,scoreMin:p>=0?0:i-n*l,scoreMax:i+n*l,currStatsBpPerPx:c}:{...o,currStatsBpPerPx:c}}if(s==="local"||s==="localsd"){const{dynamicBlocks:o,bpPerPx:p}=u.getContainingView(t),i=await e.call(r,"WiggleGetMultiRegionQuantitativeStats",{...d,regions:o.contentBlocks.map(y=>{const{start:x,end:b}=y;return{...JSON.parse(JSON.stringify(y)),start:Math.floor(x),end:Math.ceil(b)}}),bpPerPx:p}),{scoreMin:l,scoreMean:v,scoreStdDev:M}=i;return s==="localsd"?{...i,scoreMin:l>=0?0:v-n*M,scoreMax:v+n*M,currStatsBpPerPx:c}:{...i,currStatsBpPerPx:c}}if(s==="zscale")return e.call(r,"WiggleGetGlobalQuantitativeStats",d);throw new Error(`invalid autoscaleType '${s}'`)}function D(t){m(t,k(async()=>{try{if(t.quantitativeStatsReady){const a=u.getContainingView(t),e=Q();t.setStatsLoading(e);const n=JSON.stringify(a.dynamicBlocks),g=await B(t,{stopToken:e,filters:[],currStatsBpPerPx:a.bpPerPx,...t.adapterProps()});S(t)&&t.updateQuantitativeStats(g,n)}}catch(a){S(t)&&!u.isAbortException(a)&&(console.error(a),t.setError(a))}},{delay:1e3}))}export{D as getQuantitativeStatsAutorun};
//# sourceMappingURL=getQuantitativeStatsAutorun-CqKsbelz.js.map
