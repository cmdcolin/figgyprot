import{o as A,c as i,j as e,D as F,B as u,cN as R,ag as w,f as B,b0 as d,bk as L,bj as _,y as $,m as q,P as H,cI as T,cH as z,T as M,cD as P,h as O,R as G,e as N}from"./index-CT2bM4yV.js";const J=A(function({model:s,children:o,handleClose:r}){const[a,p]=i.useState(""),[h,c]=i.useState(),[x,f]=i.useState("");return e.jsxs(e.Fragment,{children:[e.jsxs(F,{children:[o,e.jsxs("div",{children:[a?e.jsxs("div",{style:{padding:50},children:[e.jsxs("span",{style:{width:400},children:["Progress: ",a]}),e.jsx(u,{onClick:()=>{R(x)},children:"Stop"})]}):null,h?e.jsx(w.ErrorMessage,{error:h}):null]})]}),e.jsxs(B,{children:[e.jsx(u,{variant:"contained",onClick:async()=>{try{c(void 0);const l=d.getContainingView(s);if(!l.initialized)return;const{rpcManager:S}=d.getSession(s),{sourcesWithoutLayout:g,minorAlleleFrequencyFilter:v,adapterConfig:k}=s;if(g){const y=L.getRpcSessionId(s),m=_();f(m);const C=await S.call(y,"MultiVariantClusterGenotypeMatrix",{regions:l.dynamicBlocks.contentBlocks,sources:g,minorAlleleFrequencyFilter:v,sessionId:y,adapterConfig:k,stopToken:m,statusCallback:j=>{p(j)}});s.setLayout(C.order.map(j=>{const t=g[j];if(!t)throw new Error(`out of bounds at ${j}`);return t}))}r()}catch(l){!d.isAbortException(l)&&$(s)&&(console.error(l),c(l))}finally{p(""),f("")}},children:"Run clustering"}),e.jsx(u,{variant:"contained",color:"secondary",onClick:()=>{r(),x&&R(x)},children:"Cancel"})]})]})}),U=q()(s=>({textAreaFont:{fontFamily:"Courier New"},mgap:{display:"flex",flexDirection:"column",gap:s.spacing(4)}})),K=A(function({model:s,handleClose:o,children:r}){const{classes:a}=U(),[p,h]=i.useState(""),[c,x]=i.useState(),[f,l]=i.useState(),[S,g]=i.useState(!1),[v,k]=i.useState(!1),[y,m]=d.useLocalStorage("cluster-clusterMethod","single");i.useEffect(()=>{(async()=>{try{l(void 0),x(void 0),g(!0);const t=d.getContainingView(s);if(!t.initialized)return;const{rpcManager:n}=d.getSession(s),{sourcesWithoutLayout:b,minorAlleleFrequencyFilter:I,adapterConfig:V}=s,E=L.getRpcSessionId(s),W=await n.call(E,"MultiVariantGetGenotypeMatrix",{regions:t.dynamicBlocks.contentBlocks,sources:b,minorAlleleFrequencyFilter:I,sessionId:E,adapterConfig:V});x(W)}catch(t){!d.isAbortException(t)&&$(s)&&(console.error(t),l(t))}finally{g(!1)}})()},[s]);const C=c?`inputMatrix<-matrix(c(${Object.values(c).map(t=>t.join(",")).join(`,
`)}
),nrow=${Object.values(c).length},byrow=TRUE)
rownames(inputMatrix)<-c(${Object.keys(c).map(t=>`'${t}'`).join(",")})
resultClusters<-hclust(dist(inputMatrix), method='${y}')
cat(resultClusters$order,sep='\\n')`:void 0,j=c?Object.entries(c).map(([t,n])=>[t,...n].join("	")).join(`
`):void 0;return e.jsxs(e.Fragment,{children:[e.jsxs(F,{children:[r,e.jsxs(H,{style:{padding:16},children:[e.jsxs("div",{style:{display:"flex",gap:"8px",flexWrap:"wrap",marginBottom:"16px"},children:[e.jsx(u,{variant:"contained",onClick:()=>{T.saveAs(new Blob([C||""],{type:"text/plain;charset=utf-8"}),"cluster.R")},children:"Download Rscript"})," ","or"," ",e.jsx(u,{variant:"contained",onClick:()=>{z(C||"")},children:"Copy Rscript to clipboard"})," ","or"," ",e.jsx(u,{variant:"contained",onClick:()=>{T.saveAs(new Blob([j||""],{type:"text/plain;charset=utf-8"}),"genotypes.tsv")},children:"Download TSV"}),e.jsxs("div",{children:[e.jsx(u,{variant:"contained",onClick:()=>{k(!v)},children:v?"Hide advanced options":"Show advanced options"}),v?e.jsxs("div",{children:[e.jsx(M,{variant:"h6",children:"Advanced options"}),e.jsx(P,{children:Object.entries({single:"Single",complete:"Complete"}).map(([t,n])=>e.jsx(O,{control:e.jsx(G,{checked:y===t,onChange:()=>{m(t)}}),label:n},t))})]}):null]}),C?e.jsx("div",{}):S?e.jsx(w.LoadingEllipses,{variant:"h6",title:"Generating genotype matrix"}):f?e.jsx(w.ErrorMessage,{error:f}):null]}),e.jsxs("div",{children:[e.jsx(M,{variant:"subtitle2",gutterBottom:!0,style:{marginTop:"16px"},children:"Clustering Results:"}),e.jsx(N,{multiline:!0,fullWidth:!0,variant:"outlined",placeholder:"Paste results from Rscript here (sequence of numbers, one per line, specifying the new ordering)",rows:10,value:p,onChange:t=>{h(t.target.value)},slotProps:{input:{classes:{input:a.textAreaFont}}}})]})]})]}),e.jsxs(B,{children:[e.jsx(u,{variant:"contained",onClick:()=>{const{sourcesWithoutLayout:t}=s;if(t)try{s.setLayout(p.split(`
`).map(n=>n.trim()).filter(n=>!!n).map(n=>+n).map(n=>{const b=t[n-1];if(!b)throw new Error(`out of bounds at ${n}`);return b}))}catch(n){console.error(n),d.getSession(s).notifyError(`${n}`,n)}o()},children:"Apply clustering"}),e.jsx(u,{variant:"contained",color:"secondary",onClick:()=>{o()},children:"Cancel"})]})]})});function D({activeMode:s,setActiveMode:o}){return e.jsxs("div",{children:[e.jsx(M,{style:{marginBottom:30},children:"This procedure will cluster the visible genotype data using hierarchical clustering"}),e.jsx(P,{children:Object.entries({auto:e.jsx("div",{children:"Run in-app clustering (slow for large data, built in JS clustering)"}),manual:e.jsx("div",{children:"Download R script to run clustering (faster for large data, uses hclust, may be more accurate)"})}).map(([r,a])=>e.jsx(O,{control:e.jsx(G,{checked:s===r,onChange:()=>{o(r)}}),label:a},r))})]})}const X=A(function({model:s,handleClose:o}){const[r,a]=i.useState("auto");return e.jsx(w.Dialog,{open:!0,title:"Cluster by genotype",onClose:(p,h)=>{h!=="backdropClick"&&o()},children:r==="auto"?e.jsx(J,{model:s,handleClose:o,children:e.jsx(D,{activeMode:r,setActiveMode:a})}):e.jsx(K,{model:s,handleClose:o,children:e.jsx(D,{activeMode:r,setActiveMode:a})})})});export{X as default};
//# sourceMappingURL=ClusterDialog-Q5ny2FSE.js.map
