import{T as h}from"./tabixIndexedFile-D1WMCFJN.js";import{a_ as m,a$ as c,b0 as l,b1 as w}from"./index-CGKDrrCR.js";import{V as x,a as C}from"./index-CSgzi_hl.js";class L extends m.BaseFeatureDataAdapter{async configurePre(e){const t=this.getConf("vcfGzLocation"),n=this.getConf(["index","location"]),r=this.getConf(["index","indexType"]),o=c.openLocation(t,this.pluginManager),s=r==="CSI",i=new h({filehandle:o,csiFilehandle:s?c.openLocation(n,this.pluginManager):void 0,tbiFilehandle:s?void 0:c.openLocation(n,this.pluginManager),chunkCacheSize:50*2**20});return{vcf:i,parser:new x({header:await i.getHeader()})}}async configurePre2(){return this.configured||(this.configured=this.configurePre().catch(e=>{throw this.configured=void 0,e})),this.configured}async configure(e){const{statusCallback:t=()=>{}}=e||{};return l.updateStatus("Downloading index",t,()=>this.configurePre2())}async getRefNames(e={}){const{vcf:t}=await this.configure(e);return t.getReferenceSequenceNames(e)}async getHeader(e){const{vcf:t}=await this.configure(e);return t.getHeader()}async getMetadata(e){const{parser:t}=await this.configure(e);return t.getMetadata()}getFeatures(e,t={}){return w(async n=>{const{refName:r,start:o,end:s}=e,{statusCallback:i=()=>{}}=t,{vcf:g,parser:a}=await this.configure(t);await l.updateStatus("Downloading variants",i,()=>g.getLines(r,o,s,{lineCallback:(f,u)=>{n.next(new C({variant:a.parseLine(f),parser:a,id:`${this.id}-vcf-${u}`}))},...t})),n.complete()},t.stopToken)}async getSources(){const e=this.getConf("samplesTsvLocation");if(e.uri===""||e.uri==="/path/to/samples.tsv"){const{parser:t}=await this.configure();return t.samples.map(n=>({name:n}))}else{const n=(await l.fetchAndMaybeUnzipText(c.openLocation(e,this.pluginManager))).split(/\n|\r\n|\r/),r=n[0].split("	"),{parser:o}=await this.configure(),s=new Set(o.samples),i=n.slice(1).filter(a=>!!a).map(a=>{const[f,...u]=a.split("	");return{...Object.fromEntries(u.map((d,p)=>[r[p+1],d])),name:f}});return i.filter(a=>!s.has(a.name)).length&&console.warn("Samples in metadata file not in VCF:",i.filter(a=>!s.has(a.name))),i.filter(a=>s.has(a.name))}}freeResources(){}}export{L as default};
//# sourceMappingURL=VcfTabixAdapter-DEi93P7b.js.map
