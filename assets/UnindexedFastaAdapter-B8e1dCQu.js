import{aV as p,aW as c,aZ as f,aX as d,aY as l}from"./index-CGKDrrCR.js";function h(r){return new Map(r.split(">").filter(e=>/\S/.test(e)).map(e=>{const[t,...s]=e.split(`
`),[a,...n]=t.split(" "),i=s.join("").replace(/\s/g,"");return[a,{description:n.join(" "),sequence:i}]}))}class m extends p.BaseSequenceAdapter{async getRefNames(e){const{fasta:t}=await this.setup(e);return[...t.keys()]}async getRegions(e){const{fasta:t}=await this.setup(e);return[...t.entries()].map(([s,a])=>({refName:s,start:0,end:a.sequence.length}))}async setupPre(e){const t=this.getConf("fastaLocation"),s=h(await c.openLocation(t,this.pluginManager).readFile("utf8"));return{fasta:new Map([...s.entries()].map(([a,n])=>[f.readConfObject(this.config,"rewriteRefNames",{refName:a})||a,n]))}}async getHeader(){const e=this.getConf("metadataLocation");return e.uri===""||e.uri==="/path/to/fa.metadata.yaml"?null:c.openLocation(e,this.pluginManager).readFile("utf8")}async setup(e){return this.setupP||(this.setupP=this.setupPre(e).catch(t=>{throw this.setupP=void 0,t})),this.setupP}getFeatures(e,t){const{refName:s,start:a,end:n}=e;return d(async i=>{const{fasta:u}=await this.setup(t),o=u.get(s);o&&i.next(new l.SimpleFeature({id:`${s}-${a}-${n}`,data:{refName:s,start:a,end:n,seq:o.sequence.slice(a,n)}})),i.complete()})}freeResources(){}}export{m as default};
//# sourceMappingURL=UnindexedFastaAdapter-B8e1dCQu.js.map
