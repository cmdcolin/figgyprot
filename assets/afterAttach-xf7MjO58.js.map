{"version":3,"file":"afterAttach-xf7MjO58.js","sources":["../../node_modules/@jbrowse/plugin-linear-comparative-view/node_modules/@jbrowse/core/util/Base1DUtils.js","../../node_modules/@jbrowse/plugin-linear-comparative-view/esm/LinearSyntenyDisplay/afterAttach.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.moveTo = moveTo;\nexports.pxToBp = pxToBp;\nexports.bpToPx = bpToPx;\nexports.bpToPxMap = bpToPxMap;\nfunction lengthBetween(self, start, end) {\n    let bpSoFar = 0;\n    const { displayedRegions } = self;\n    if (start.index === end.index) {\n        bpSoFar += end.offset - start.offset;\n    }\n    else {\n        const s = displayedRegions[start.index];\n        bpSoFar += s.end - s.start - start.offset;\n        if (end.index - start.index >= 2) {\n            for (let i = start.index + 1; i < end.index; i++) {\n                const region = displayedRegions[i];\n                const len = region.end - region.start;\n                bpSoFar += len;\n            }\n        }\n        bpSoFar += end.offset;\n    }\n    return bpSoFar;\n}\nfunction moveTo(self, start, end) {\n    if (!start || !end) {\n        return;\n    }\n    const { width, interRegionPaddingWidth, displayedRegions, bpPerPx, minimumBlockWidth, } = self;\n    const len = lengthBetween(self, start, end);\n    let numBlocksWideEnough = 0;\n    for (let i = start.index; i < end.index; i++) {\n        const r = displayedRegions[i];\n        if ((r.end - r.start) / bpPerPx > minimumBlockWidth) {\n            numBlocksWideEnough++;\n        }\n    }\n    const targetBpPerPx = len / (width - interRegionPaddingWidth * numBlocksWideEnough);\n    const newBpPerPx = self.zoomTo(targetBpPerPx);\n    let extraBp = 0;\n    if (targetBpPerPx < newBpPerPx) {\n        extraBp = ((newBpPerPx - targetBpPerPx) * self.width) / 2;\n    }\n    let bpToStart = -extraBp;\n    for (let i = 0; i < self.displayedRegions.length; i++) {\n        const region = self.displayedRegions[i];\n        if (start.index === i) {\n            bpToStart += start.offset;\n            break;\n        }\n        else {\n            bpToStart += region.end - region.start;\n        }\n    }\n    self.scrollTo(Math.round(bpToStart / self.bpPerPx));\n}\nfunction coord(r, bp) {\n    return Math.floor(r.reversed ? r.end - bp : r.start + bp) + 1;\n}\nfunction pxToBp(self, px) {\n    var _a;\n    let bpSoFar = 0;\n    const { bpPerPx, offsetPx, displayedRegions, interRegionPaddingWidth, staticBlocks, } = self;\n    const blocks = staticBlocks.contentBlocks;\n    const bp = (offsetPx + px) * bpPerPx;\n    if (bp < 0) {\n        const r = displayedRegions[0];\n        const snap = r;\n        return {\n            ...snap,\n            oob: true,\n            coord: coord(r, bp),\n            offset: bp,\n            index: 0,\n        };\n    }\n    const interRegionPaddingBp = interRegionPaddingWidth * bpPerPx;\n    let currBlock = 0;\n    for (let i = 0; i < displayedRegions.length; i++) {\n        const r = displayedRegions[i];\n        const len = r.end - r.start;\n        const offset = bp - bpSoFar;\n        if (len + bpSoFar > bp && bpSoFar <= bp) {\n            const snap = r;\n            return {\n                ...snap,\n                oob: false,\n                offset,\n                coord: coord(r, offset),\n                index: i,\n            };\n        }\n        if (((_a = blocks[currBlock]) === null || _a === void 0 ? void 0 : _a.regionNumber) === i) {\n            bpSoFar += len + interRegionPaddingBp;\n            currBlock++;\n        }\n        else {\n            bpSoFar += len;\n        }\n    }\n    if (bp >= bpSoFar && displayedRegions.length > 0) {\n        const r = displayedRegions.at(-1);\n        const len = r.end - r.start;\n        const offset = bp - bpSoFar + len;\n        const snap = r;\n        return {\n            ...snap,\n            oob: true,\n            offset,\n            coord: coord(r, offset),\n            index: displayedRegions.length - 1,\n        };\n    }\n    return {\n        coord: 0,\n        index: 0,\n        refName: '',\n        oob: true,\n        assemblyName: '',\n        offset: 0,\n        start: 0,\n        end: 0,\n        reversed: false,\n    };\n}\nfunction bpToPx({ refName, coord, regionNumber, self, }) {\n    var _a;\n    let bpSoFar = 0;\n    const { interRegionPaddingWidth, bpPerPx, displayedRegions, staticBlocks } = self;\n    const blocks = staticBlocks.contentBlocks;\n    const interRegionPaddingBp = interRegionPaddingWidth * bpPerPx;\n    let currBlock = 0;\n    let i = 0;\n    for (; i < displayedRegions.length; i++) {\n        const r = displayedRegions[i];\n        const len = r.end - r.start;\n        if (refName === r.refName &&\n            coord >= r.start &&\n            coord <= r.end &&\n            (regionNumber ? regionNumber === i : true)) {\n            bpSoFar += r.reversed ? r.end - coord : coord - r.start;\n            break;\n        }\n        if (((_a = blocks[currBlock]) === null || _a === void 0 ? void 0 : _a.regionNumber) === i) {\n            bpSoFar += len + interRegionPaddingBp;\n            currBlock++;\n        }\n        else {\n            bpSoFar += len;\n        }\n    }\n    const found = displayedRegions[i];\n    if (found) {\n        return {\n            index: i,\n            offsetPx: Math.round(bpSoFar / bpPerPx),\n        };\n    }\n    return undefined;\n}\nfunction bpToPxMap({ refName, coord, regionNumber, self, }) {\n    var _a;\n    let bpSoFar = 0;\n    const { interRegionPaddingWidth, bpPerPx, displayedRegions, staticBlocks } = self;\n    const blocks = staticBlocks.contentBlocks;\n    const interRegionPaddingBp = interRegionPaddingWidth * bpPerPx;\n    const map = {};\n    let currBlock = 0;\n    let i = 0;\n    for (; i < displayedRegions.length; i++) {\n        const r = displayedRegions[i];\n        const len = r.end - r.start;\n        if (refName === r.refName &&\n            coord >= r.start &&\n            coord <= r.end &&\n            (regionNumber === undefined ? true : regionNumber === i)) {\n            bpSoFar += r.reversed ? r.end - coord : coord - r.start;\n            break;\n        }\n        if (((_a = blocks[currBlock]) === null || _a === void 0 ? void 0 : _a.regionNumber) === i) {\n            bpSoFar += len + interRegionPaddingBp;\n            currBlock++;\n        }\n        else {\n            bpSoFar += len;\n        }\n    }\n    const found = displayedRegions[i];\n    if (found) {\n        return {\n            index: i,\n            offsetPx: Math.round(bpSoFar / bpPerPx),\n        };\n    }\n    return map;\n}\n","import { getContainingView, getSession } from '@jbrowse/core/util';\nimport { bpToPx } from '@jbrowse/core/util/Base1DUtils';\nimport { MismatchParser } from '@jbrowse/plugin-alignments';\nimport { autorun, reaction } from 'mobx';\nimport { addDisposer, getSnapshot } from 'mobx-state-tree';\nimport { drawMouseoverSynteny, drawRef } from './drawSynteny';\nexport function doAfterAttach(self) {\n    addDisposer(self, autorun(() => {\n        var _a, _b;\n        const view = getContainingView(self);\n        if (!view.initialized ||\n            !view.views.every(a => a.displayedRegions.length > 0 && a.initialized)) {\n            return;\n        }\n        const ctx1 = (_a = self.mainCanvas) === null || _a === void 0 ? void 0 : _a.getContext('2d');\n        const ctx3 = (_b = self.cigarClickMapCanvas) === null || _b === void 0 ? void 0 : _b.getContext('2d');\n        if (!ctx1 || !ctx3) {\n            return;\n        }\n        const height = self.height;\n        const width = view.width;\n        ctx1.clearRect(0, 0, width, height);\n        ctx3.clearRect(0, 0, width, height);\n        drawRef(self, ctx1, ctx3);\n    }));\n    addDisposer(self, autorun(() => {\n        const view = getContainingView(self);\n        if (!view.initialized ||\n            !view.views.every(a => a.displayedRegions.length > 0 && a.initialized)) {\n            return;\n        }\n        drawMouseoverSynteny(self);\n    }));\n    addDisposer(self, reaction(() => {\n        const view = getContainingView(self);\n        return {\n            bpPerPx: view.views.map(v => v.bpPerPx),\n            displayedRegions: JSON.stringify(view.views.map(v => v.displayedRegions)),\n            features: self.features,\n            initialized: view.initialized &&\n                view.views.every(a => a.displayedRegions.length > 0 && a.initialized),\n        };\n    }, ({ initialized }) => {\n        if (!initialized) {\n            return;\n        }\n        const { level } = self;\n        const { assemblyManager } = getSession(self);\n        const view = getContainingView(self);\n        const viewSnaps = view.views.map(view => ({\n            ...getSnapshot(view),\n            width: view.width,\n            staticBlocks: view.staticBlocks,\n            interRegionPaddingWidth: view.interRegionPaddingWidth,\n            minimumBlockWidth: view.minimumBlockWidth,\n        }));\n        const map = [];\n        const feats = self.features || [];\n        for (const f of feats) {\n            const mate = f.get('mate');\n            let f1s = f.get('start');\n            let f1e = f.get('end');\n            const f2s = mate.start;\n            const f2e = mate.end;\n            if (f.get('strand') === -1) {\n                ;\n                [f1e, f1s] = [f1s, f1e];\n            }\n            const a1 = assemblyManager.get(f.get('assemblyName'));\n            const a2 = assemblyManager.get(mate.assemblyName);\n            const r1 = f.get('refName');\n            const r2 = mate.refName;\n            const ref1 = (a1 === null || a1 === void 0 ? void 0 : a1.getCanonicalRefName(r1)) || r1;\n            const ref2 = (a2 === null || a2 === void 0 ? void 0 : a2.getCanonicalRefName(r2)) || r2;\n            const v1 = viewSnaps[level];\n            const v2 = viewSnaps[level + 1];\n            const p11 = bpToPx({ self: v1, refName: ref1, coord: f1s });\n            const p12 = bpToPx({ self: v1, refName: ref1, coord: f1e });\n            const p21 = bpToPx({ self: v2, refName: ref2, coord: f2s });\n            const p22 = bpToPx({ self: v2, refName: ref2, coord: f2e });\n            if (p11 === undefined ||\n                p12 === undefined ||\n                p21 === undefined ||\n                p22 === undefined) {\n                continue;\n            }\n            const cigar = f.get('CIGAR');\n            map.push({\n                p11,\n                p12,\n                p21,\n                p22,\n                f,\n                cigar: MismatchParser.parseCigar(cigar),\n            });\n        }\n        self.setFeatPositions(map);\n    }, { fireImmediately: true }));\n}\n"],"names":["Base1DUtils","moveTo","pxToBp","bpToPx_1","bpToPx","bpToPxMap","lengthBetween","self","start","end","bpSoFar","displayedRegions","s","i","region","len","width","interRegionPaddingWidth","bpPerPx","minimumBlockWidth","numBlocksWideEnough","r","targetBpPerPx","newBpPerPx","extraBp","bpToStart","coord","bp","px","_a","offsetPx","staticBlocks","blocks","interRegionPaddingBp","currBlock","offset","refName","regionNumber","map","doAfterAttach","addDisposer","autorun","_b","view","getContainingView","a","ctx1","ctx3","height","drawRef","drawMouseoverSynteny","reaction","v","initialized","level","assemblyManager","getSession","viewSnaps","getSnapshot","feats","f","mate","f1s","f1e","f2s","f2e","a1","a2","r1","r2","ref1","ref2","v1","v2","p11","p12","p21","p22","cigar","MismatchParser.parseCigar"],"mappings":"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","x_google_ignoreList":[0,1]}