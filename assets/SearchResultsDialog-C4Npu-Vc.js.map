{"version":3,"file":"SearchResultsDialog-C4Npu-Vc.js","sources":["../../node_modules/@mui/material/esm/Table/tableClasses.js","../../node_modules/@mui/material/esm/Table/Table.js","../../node_modules/@mui/material/esm/TableBody/tableBodyClasses.js","../../node_modules/@mui/material/esm/TableBody/TableBody.js","../../node_modules/@mui/material/esm/TableContainer/tableContainerClasses.js","../../node_modules/@mui/material/esm/TableContainer/TableContainer.js","../../node_modules/@mui/material/esm/TableHead/tableHeadClasses.js","../../node_modules/@mui/material/esm/TableHead/TableHead.js","../../node_modules/@mui/material/esm/TableRow/tableRowClasses.js","../../node_modules/@mui/material/esm/TableRow/TableRow.js","../../node_modules/@jbrowse/plugin-linear-genome-view/esm/LinearGenomeView/components/SearchResultsTable.js","../../node_modules/@jbrowse/plugin-linear-genome-view/esm/LinearGenomeView/components/SearchResultsDialog.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport TableContext from \"./TableContext.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getTableUtilityClass } from \"./tableClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': {\n    ...theme.typography.body2,\n    padding: theme.spacing(2),\n    color: (theme.vars || theme).palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  },\n  variants: [{\n    props: ({\n      ownerState\n    }) => ownerState.stickyHeader,\n    style: {\n      borderCollapse: 'separate'\n    }\n  }]\n})));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n  const {\n    className,\n    component = defaultComponent,\n    padding = 'normal',\n    size = 'medium',\n    stickyHeader = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component,\n    padding,\n    size,\n    stickyHeader\n  };\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, {\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState,\n      ...other\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set the header sticky.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Table;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableBodyUtilityClass(slot) {\n  return generateUtilityClass('MuiTableBody', slot);\n}\nconst tableBodyClasses = generateUtilityClasses('MuiTableBody', ['root']);\nexport default tableBodyClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getTableBodyUtilityClass } from \"./tableBodyClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableBodyUtilityClass, classes);\n};\nconst TableBodyRoot = styled('tbody', {\n  name: 'MuiTableBody',\n  slot: 'Root'\n})({\n  display: 'table-row-group'\n});\nconst tablelvl2 = {\n  variant: 'body'\n};\nconst defaultComponent = 'tbody';\nconst TableBody = /*#__PURE__*/React.forwardRef(function TableBody(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableBody'\n  });\n  const {\n    className,\n    component = defaultComponent,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableBodyRoot, {\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState,\n      ...other\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableBody;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getTableContainerUtilityClass } from \"./tableContainerClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root'\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, {\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getTableHeadUtilityClass } from \"./tableHeadClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root'\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n    className,\n    component = defaultComponent,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, {\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState,\n      ...other\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableRowUtilityClass(slot) {\n  return generateUtilityClass('MuiTableRow', slot);\n}\nconst tableRowClasses = generateUtilityClasses('MuiTableRow', ['root', 'selected', 'hover', 'head', 'footer']);\nexport default tableRowClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport tableRowClasses, { getTableRowUtilityClass } from \"./tableRowClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    selected,\n    hover,\n    head,\n    footer\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', hover && 'hover', head && 'head', footer && 'footer']\n  };\n  return composeClasses(slots, getTableRowUtilityClass, classes);\n};\nconst TableRowRoot = styled('tr', {\n  name: 'MuiTableRow',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.head && styles.head, ownerState.footer && styles.footer];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  color: 'inherit',\n  display: 'table-row',\n  verticalAlign: 'middle',\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  [`&.${tableRowClasses.hover}:hover`]: {\n    backgroundColor: (theme.vars || theme).palette.action.hover\n  },\n  [`&.${tableRowClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n    }\n  }\n})));\nconst defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\nconst TableRow = /*#__PURE__*/React.forwardRef(function TableRow(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableRow'\n  });\n  const {\n    className,\n    component = defaultComponent,\n    hover = false,\n    selected = false,\n    ...other\n  } = props;\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const ownerState = {\n    ...props,\n    component,\n    hover,\n    selected,\n    head: tablelvl2 && tablelvl2.variant === 'head',\n    footer: tablelvl2 && tablelvl2.variant === 'footer'\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableRowRoot, {\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    role: component === defaultComponent ? null : 'row',\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Should be valid `<tr>` children such as `TableCell`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the table row will shade on hover.\n   * @default false\n   */\n  hover: PropTypes.bool,\n  /**\n   * If `true`, the table row will have the selected shading.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableRow;","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { assembleLocString, getEnv, getSession, parseLocString, } from '@jbrowse/core/util';\nimport { Button, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, } from '@mui/material';\nimport { getRoot, resolveIdentifier } from 'mobx-state-tree';\nexport default function SearchResultsTable({ searchResults, assemblyName: optAssemblyName, model, handleClose, }) {\n    const session = getSession(model);\n    const { pluginManager } = getEnv(session);\n    const { assemblyManager } = session;\n    const assemblyName = optAssemblyName || model.displayedRegions[0].assemblyName;\n    const assembly = assemblyManager.get(assemblyName);\n    if (!assembly) {\n        throw new Error(`assembly ${assemblyName} not found`);\n    }\n    if (!assembly.regions) {\n        throw new Error(`assembly ${assemblyName} regions not loaded`);\n    }\n    function getTrackName(trackId) {\n        var _a;\n        if (trackId) {\n            const schema = pluginManager.pluggableConfigSchemaType('track');\n            const configuration = resolveIdentifier(schema, getRoot(model), trackId);\n            return ((_a = configuration === null || configuration === void 0 ? void 0 : configuration.name) === null || _a === void 0 ? void 0 : _a.value) || '';\n        }\n        return '';\n    }\n    async function handleClick(location) {\n        var _a;\n        try {\n            const newRegion = (_a = assembly === null || assembly === void 0 ? void 0 : assembly.regions) === null || _a === void 0 ? void 0 : _a.find(region => location === region.refName);\n            if (newRegion) {\n                model.setDisplayedRegions([newRegion]);\n                model.showAllRegions();\n            }\n            else {\n                await model.navToLocString(location, assemblyName);\n            }\n        }\n        catch (e) {\n            console.warn(e);\n            session.notify(`${e}`, 'warning');\n        }\n    }\n    return (_jsx(TableContainer, { component: Paper, children: _jsxs(Table, { children: [_jsx(TableHead, { children: _jsxs(TableRow, { children: [_jsx(TableCell, { children: \"Name\" }), _jsx(TableCell, { align: \"right\", children: \"Location\" }), _jsx(TableCell, { align: \"right\", children: \"Track\" }), _jsx(TableCell, { align: \"right\" })] }) }), _jsx(TableBody, { children: searchResults.map(result => {\n                        const locString = result.getLocation();\n                        let loc;\n                        try {\n                            loc = locString\n                                ? parseLocString(locString, refName => assembly.isValidRefName(refName))\n                                : undefined;\n                        }\n                        catch (e) { }\n                        return (_jsxs(TableRow, { children: [_jsx(TableCell, { component: \"th\", scope: \"row\", children: result.getLabel() }), _jsx(TableCell, { align: \"right\", children: loc\n                                        ? assembleLocString({\n                                            ...loc,\n                                            refName: assembly.getCanonicalRefName(loc.refName) ||\n                                                loc.refName,\n                                        })\n                                        : locString }), _jsx(TableCell, { align: \"right\", children: getTrackName(result.getTrackId()) || 'N/A' }), _jsx(TableCell, { align: \"right\", children: _jsx(Button, { onClick: async () => {\n                                            try {\n                                                await handleClick(result.getLocation() || result.getLabel());\n                                                const resultTrackId = result.getTrackId();\n                                                if (resultTrackId) {\n                                                    model.showTrack(resultTrackId);\n                                                }\n                                            }\n                                            catch (e) {\n                                                console.error(e);\n                                                session.notifyError(`${e}`, e);\n                                            }\n                                            handleClose();\n                                        }, color: \"primary\", variant: \"contained\", children: \"Go\" }) })] }, result.getId()));\n                    }) })] }) }));\n}\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { Dialog } from '@jbrowse/core/ui';\nimport { Button, DialogActions, DialogContent, Divider, Typography, } from '@mui/material';\nimport SearchResultsTable from './SearchResultsTable';\nexport default function SearchResultsDialog({ model, assemblyName, searchQuery, searchResults, handleClose, }) {\n    return (_jsxs(Dialog, { open: true, maxWidth: \"xl\", onClose: handleClose, title: \"Search results\", children: [_jsx(DialogContent, { children: !(searchResults === null || searchResults === void 0 ? void 0 : searchResults.length) ? (_jsxs(Typography, { children: [\"No results found for \", _jsx(\"b\", { children: searchQuery })] })) : (_jsxs(_Fragment, { children: [_jsxs(Typography, { children: [\"Showing results for \", _jsx(\"b\", { children: searchQuery })] }), _jsx(SearchResultsTable, { model: model, handleClose: handleClose, assemblyName: assemblyName, searchResults: searchResults })] })) }), _jsx(Divider, {}), _jsx(DialogActions, { children: _jsx(Button, { onClick: () => {\n                        handleClose();\n                    }, color: \"primary\", children: \"Cancel\" }) })] }));\n}\n"],"names":["getTableUtilityClass","slot","generateUtilityClass","generateUtilityClasses","useUtilityClasses","ownerState","classes","stickyHeader","composeClasses","TableRoot","styled","props","styles","memoTheme","theme","defaultComponent","Table","React.forwardRef","inProps","ref","useDefaultProps","className","component","padding","size","other","table","React.useMemo","_jsx","TableContext","clsx","getTableBodyUtilityClass","TableBodyRoot","tablelvl2","TableBody","Tablelvl2Context","getTableContainerUtilityClass","TableContainerRoot","TableContainer","getTableHeadUtilityClass","TableHeadRoot","TableHead","getTableRowUtilityClass","tableRowClasses","selected","hover","head","footer","TableRowRoot","alpha","TableRow","React.useContext","SearchResultsTable","searchResults","optAssemblyName","model","handleClose","session","getSession","pluginManager","getEnv","assemblyManager","assemblyName","assembly","getTrackName","trackId","_a","schema","configuration","resolveIdentifier","getRoot","handleClick","location","newRegion","region","e","Paper","_jsxs","TableCell","result","locString","loc","parseLocString","refName","assembleLocString","Button","resultTrackId","SearchResultsDialog","searchQuery","Dialog","DialogContent","_Fragment","Typography","Divider","DialogActions"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11]}