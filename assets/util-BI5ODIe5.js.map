{"version":3,"file":"util-BI5ODIe5.js","sources":["../../node_modules/@jbrowse/plugin-comparative-adapters/esm/util.js"],"sourcesContent":["import { fetchAndMaybeUnzipText, getProgressDisplayStr, } from '@jbrowse/core/util';\nexport function parseBed(text) {\n    return new Map(text\n        .split(/\\n|\\r\\n|\\r/)\n        .filter(f => !!f || f.startsWith('#'))\n        .map(line => {\n        const [refName, start, end, name, score, strand] = line.split('\\t');\n        return [\n            name,\n            {\n                refName,\n                start: +start,\n                end: +end,\n                score: +score,\n                name,\n                strand: strand === '-' ? -1 : 1,\n            },\n        ];\n    }));\n}\nexport async function readFile(file, opts) {\n    return fetchAndMaybeUnzipText(file, opts);\n}\nexport function zip(a, b) {\n    return a.map((e, i) => [e, b[i]]);\n}\nexport function parseLineByLine(buffer, cb, opts) {\n    const { statusCallback = () => { } } = opts || {};\n    let blockStart = 0;\n    const entries = [];\n    const decoder = new TextDecoder('utf8');\n    let i = 0;\n    let s = performance.now();\n    while (blockStart < buffer.length) {\n        const n = buffer.indexOf(10, blockStart);\n        if (n === -1) {\n            break;\n        }\n        const b = buffer.subarray(blockStart, n);\n        const line = decoder.decode(b).trim();\n        if (line) {\n            const entry = cb(line);\n            if (entry) {\n                entries.push(entry);\n            }\n        }\n        if (i++ % 10000 === 0 && performance.now() - s > 50) {\n            statusCallback(`Loading ${getProgressDisplayStr(blockStart, buffer.length)}`);\n            s = performance.now();\n        }\n        blockStart = n + 1;\n    }\n    statusCallback('');\n    return entries;\n}\nexport function parsePAFLine(line) {\n    const parts = line.split('\\t');\n    const extraFields = parts.slice(12);\n    const extra = {\n        numMatches: +parts[9],\n        blockLen: +parts[10],\n        mappingQual: +parts[11],\n    };\n    if (extraFields.length) {\n        for (const field of extraFields) {\n            const colonIndex = field.indexOf(':');\n            extra[field.slice(0, colonIndex)] = field.slice(colonIndex + 3);\n        }\n    }\n    return {\n        tname: parts[5],\n        tstart: +parts[7],\n        tend: +parts[8],\n        qname: parts[0],\n        qstart: +parts[2],\n        qend: +parts[3],\n        strand: parts[4] === '-' ? -1 : 1,\n        extra,\n    };\n}\nexport function flipCigar(cigar) {\n    const arr = [];\n    for (let i = cigar.length - 2; i >= 0; i -= 2) {\n        arr.push(cigar[i]);\n        const op = cigar[i + 1];\n        if (op === 'D') {\n            arr.push('I');\n        }\n        else if (op === 'I') {\n            arr.push('D');\n        }\n        else {\n            arr.push(op);\n        }\n    }\n    return arr;\n}\nexport function swapIndelCigar(cigar) {\n    return cigar.replaceAll('D', 'K').replaceAll('I', 'D').replaceAll('K', 'I');\n}\n"],"names":["parseBed","text","f","line","refName","start","end","name","score","strand","readFile","file","opts","fetchAndMaybeUnzipText","zip","a","b","e","i","parseLineByLine","buffer","cb","statusCallback","blockStart","entries","decoder","s","n","entry","getProgressDisplayStr","parsePAFLine","parts","extraFields","extra","field","colonIndex","flipCigar","cigar","arr","op","swapIndelCigar"],"mappings":"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","x_google_ignoreList":[0]}