import{T as L}from"./tabixIndexedFile-CxCPpLUU.js";import{a3 as S}from"./index-CT2bM4yV.js";import{B as w,i as c,O as k,b as v}from"./util-eIttPhVK.js";import{S as I}from"./index-DviPGhcF.js";class R extends w.BaseFeatureDataAdapter{constructor(e,a,i){super(e,a,i);const o=this.getConf("pifGzLocation"),s=this.getConf(["index","indexType"]),n=this.getConf(["index","location"]),t=this.pluginManager;this.pif=new L({filehandle:c.openLocation(o,t),csiFilehandle:s==="CSI"?c.openLocation(n,t):void 0,tbiFilehandle:s!=="CSI"?c.openLocation(n,t):void 0,chunkCacheSize:50*2**20})}async getHeader(){return this.pif.getHeader()}getAssemblyNames(){const e=this.getConf("assemblyNames");return e.length===0?[this.getConf("queryAssembly"),this.getConf("targetAssembly")]:e}async hasDataForRefName(){return!0}async getRefNames(e={}){var a,i;const o=(i=(a=e.regions)===null||a===void 0?void 0:a[0])===null||i===void 0?void 0:i.assemblyName;if(!o)throw new Error("no assembly name provided");const s=this.getAssemblyNames().indexOf(o),n=await this.pif.getReferenceSequenceNames(e);return s===0?n.filter(t=>t.startsWith("q")).map(t=>t.slice(1)):s===1?n.filter(t=>t.startsWith("t")).map(t=>t.slice(1)):[]}getFeatures(e,a={}){const{statusCallback:i=()=>{}}=a;return k(async o=>{const{assemblyName:s}=e,n=this.getAssemblyNames(),m=n.indexOf(s)===0,u=m?"q":"t";await S.updateStatus("Downloading features",i,()=>this.pif.getLines(u+e.refName,e.start,e.end,{lineCallback:(g,l)=>{const r=v(g),h=r.qname.slice(1),y=r.qstart,b=r.qend,N=r.tname,x=r.tstart,C=r.tend,{extra:d,strand:A}=r,{numMatches:f=0,blockLen:p=1,cg:T,...F}=d;o.next(new I({uniqueId:l+s,assemblyName:s,start:y,end:b,type:"match",refName:h,strand:A,...F,CIGAR:d.cg,syntenyId:l,identity:f/p,numMatches:f,blockLen:p,mate:{start:x,end:C,refName:N,assemblyName:n[+m]}}))},stopToken:a.stopToken})),o.complete()})}freeResources(){}}R.capabilities=["getFeatures","getRefNames"];export{R as default};
//# sourceMappingURL=PairwiseIndexedPAFAdapter-p5WZr60J.js.map
