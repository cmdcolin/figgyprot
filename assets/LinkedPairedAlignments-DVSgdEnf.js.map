{"version":3,"mappings":";sHAIA,MAAMA,EAAiCC,OAAK,IAAKC,EAAA,IAAC,OAAO,qBAAkC,OAAAC,KAAA,2CAAC,EACtFC,EAAkCH,OAAK,IAAKC,EAAA,IAAC,OAAO,qBAAmC,OAAAC,KAAA,2CAAC,EAC/E,SAASE,EAAwC,CAAE,MAAAC,EAAO,QAAAC,GAAY,CACjF,MAAMC,EAAUC,EAAU,WAACH,CAAK,EAC1BI,EAAK,CACP,SAAUH,EAAQ,SAClB,QAASA,EAAQ,QACjB,MAAOA,EAAQ,MACf,IAAKA,EAAQ,IACb,OAAQA,EAAQ,MACnB,EACKI,EAAK,CACP,SAAU,GAAGJ,EAAQ,EAAE,QACvB,QAASA,EAAQ,SACjB,MAAOA,EAAQ,SACf,IAAKA,EAAQ,SAAW,EACxB,OAAQA,EAAQ,MACnB,EACD,OAAQK,EAAK,KAAC,MAAO,CAAE,SAAU,CAACC,MAAKC,EAAY,CAAE,SAAU,mBAAmB,CAAE,EAAGD,MAAK,KAAM,CAAE,SAAUD,OAAM,KAAM,CAAE,SAAU,CAACF,EAAG,QAAS,IAAKK,EAAQ,SAACL,EAAG,KAAK,EAAG,OAAQC,EAAG,QAAS,IAAKI,EAAQ,SAACJ,EAAG,KAAK,EAAG,IAAKE,MAAKG,EAAM,CAAE,KAAM,IAAK,QAASC,GAAS,CAC5OA,EAAM,eAAgB,EACtBT,EAAQ,YAAYU,GAAe,CAC/BlB,EACA,CACI,YAAAkB,EACA,QAAAV,EACA,QAAS,IAAIW,gBAAc,CAAE,GAAGT,EAAI,KAAMC,EAAI,EAC9C,KAAML,EAAM,KACZ,aAAcA,EAAM,KAAK,iBAAiB,CAAC,EAAE,YAChD,CACrC,CAAiC,CACJ,EAAE,SAAU,eAAgB,EAAG,IAAKO,MAAKG,EAAM,CAAE,KAAM,IAAK,QAASC,GAAS,CAC3EA,EAAM,eAAgB,EACtBT,EAAQ,YAAYU,GAAe,CAC/Bd,EACA,CACI,YAAAc,EACA,QAAAV,EACA,QAAS,IAAIW,gBAAc,CAAE,GAAGT,EAAI,KAAMC,EAAI,EAC9C,KAAML,EAAM,KACZ,aAAcA,EAAM,KAAK,iBAAiB,CAAC,EAAE,YAChD,CACrC,CAAiC,CACjC,EAA+B,SAAU,cAAgB,EAAC,CAAC,CAAE,CAAC,CAAE,CAAC,EAAG,CACpE,CC3Ce,SAASc,EAAeC,EAAO,CAC1C,KAAM,CAAE,MAAAf,EAAO,QAAAC,CAAO,EAAKc,EACrBb,EAAUC,EAAU,WAACH,CAAK,EAC1B,CAAE,cAAAgB,CAAa,EAAKC,EAAM,OAACf,CAAO,EACxC,IAAIgB,EAAuB,GAC3B,GAAI,CACAA,EAAuB,CAAC,CAACF,EAAc,YAAY,qBAAqB,CAChF,MACc,CACd,CACI,OAAOE,EAAwBX,MAAKY,EAAU,CAAE,GAAGJ,EAAO,MAAO,oBAAqB,SAAUR,EAAI,IAACR,EAAyC,CAAE,MAAOC,EAAO,QAASC,CAAS,EAAG,GAAK,IAC5L","names":["BreakendMultiLevelOptionDialog","lazy","__vitePreload","n","BreakendSingleLevelOptionDialog","LaunchPairedEndBreakpointSplitViewPanel","model","feature","session","getSession","f1","f2","_jsxs","_jsx","Typography","toLocale","Link","event","handleClose","SimpleFeature","SuppAlignments","props","pluginManager","getEnv","hasBreakendSplitView","BaseCard"],"ignoreList":[0,1],"sources":["../../node_modules/@jbrowse/plugin-alignments/esm/AlignmentsFeatureDetail/LaunchPairedEndBreakpointSplitViewPanel.js","../../node_modules/@jbrowse/plugin-alignments/esm/AlignmentsFeatureDetail/LinkedPairedAlignments.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { lazy } from 'react';\nimport { SimpleFeature, getSession, toLocale } from '@jbrowse/core/util';\nimport { Link, Typography } from '@mui/material';\nconst BreakendMultiLevelOptionDialog = lazy(() => import('./BreakendMultiLevelOptionDialog'));\nconst BreakendSingleLevelOptionDialog = lazy(() => import('./BreakendSingleLevelOptionDialog'));\nexport default function LaunchPairedEndBreakpointSplitViewPanel({ model, feature, }) {\n    const session = getSession(model);\n    const f1 = {\n        uniqueId: feature.uniqueId,\n        refName: feature.refName,\n        start: feature.start,\n        end: feature.end,\n        strand: feature.strand,\n    };\n    const f2 = {\n        uniqueId: `${feature.id}-mate`,\n        refName: feature.next_ref,\n        start: feature.next_pos,\n        end: feature.next_pos + 1,\n        strand: feature.strand,\n    };\n    return (_jsxs(\"div\", { children: [_jsx(Typography, { children: \"Launch split view\" }), _jsx(\"ul\", { children: _jsxs(\"li\", { children: [f1.refName, \":\", toLocale(f1.start), \" -> \", f2.refName, \":\", toLocale(f2.start), ' ', _jsx(Link, { href: \"#\", onClick: event => {\n                                event.preventDefault();\n                                session.queueDialog(handleClose => [\n                                    BreakendMultiLevelOptionDialog,\n                                    {\n                                        handleClose,\n                                        session,\n                                        feature: new SimpleFeature({ ...f1, mate: f2 }),\n                                        view: model.view,\n                                        assemblyName: model.view.displayedRegions[0].assemblyName,\n                                    },\n                                ]);\n                            }, children: \"(top/bottom)\" }), ' ', _jsx(Link, { href: \"#\", onClick: event => {\n                                event.preventDefault();\n                                session.queueDialog(handleClose => [\n                                    BreakendSingleLevelOptionDialog,\n                                    {\n                                        handleClose,\n                                        session,\n                                        feature: new SimpleFeature({ ...f1, mate: f2 }),\n                                        view: model.view,\n                                        assemblyName: model.view.displayedRegions[0].assemblyName,\n                                    },\n                                ]);\n                            }, children: \"(single row)\" })] }) })] }));\n}\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard';\nimport { getEnv, getSession } from '@jbrowse/core/util';\nimport LaunchPairedEndBreakpointSplitViewPanel from './LaunchPairedEndBreakpointSplitViewPanel';\nexport default function SuppAlignments(props) {\n    const { model, feature } = props;\n    const session = getSession(model);\n    const { pluginManager } = getEnv(session);\n    let hasBreakendSplitView = false;\n    try {\n        hasBreakendSplitView = !!pluginManager.getViewType('BreakpointSplitView');\n    }\n    catch (e) {\n    }\n    return hasBreakendSplitView ? (_jsx(BaseCard, { ...props, title: \"Paired alignments\", children: _jsx(LaunchPairedEndBreakpointSplitViewPanel, { model: model, feature: feature }) })) : null;\n}\n"],"file":"assets/LinkedPairedAlignments-DVSgdEnf.js"}