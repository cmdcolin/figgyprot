import{T as I}from"./tabixIndexedFile-CxCPpLUU.js";import{aP as S,aR as g,aQ as h,aT as T,aS as _,aU as C}from"./index-CT2bM4yV.js";import{p as F,f as L}from"./featureData-XuIg4mRh.js";class k extends S.BaseFeatureDataAdapter{async configurePre(e){const t=this.getConf("gffGzLocation"),s=this.getConf(["index","indexType"]),n=this.getConf(["index","location"]),r=this.getConf("dontRedispatch")||["chromosome","contig","region"],c=new I({filehandle:g.openLocation(t,this.pluginManager),csiFilehandle:s==="CSI"?g.openLocation(n,this.pluginManager):void 0,tbiFilehandle:s!=="CSI"?g.openLocation(n,this.pluginManager):void 0,chunkCacheSize:50*2**20,renameRefSeqs:d=>d});return{gff:c,dontRedispatch:r,header:await c.getHeader()}}async configurePre2(){return this.configured||(this.configured=this.configurePre().catch(e=>{throw this.configured=void 0,e})),this.configured}async configure(e){const{statusCallback:t=()=>{}}=e||{};return h.updateStatus("Downloading index",t,()=>this.configurePre2())}async getRefNames(e={}){const{gff:t}=await this.configure(e);return t.getReferenceSequenceNames(e)}async getHeader(e={}){const{gff:t}=await this.configure(e);return t.getHeader()}getFeatures(e,t={}){return T(async s=>{const{gff:n}=await this.configure(t),r=await n.getMetadata();await this.getFeaturesHelper(e,t,r,s,!0)},t.stopToken)}async getFeaturesHelper(e,t,s,n,r,c=e){var d,u;const{statusCallback:p=()=>{}}=t;try{const o=[],{dontRedispatch:m,gff:w}=await this.configure(t);if(await h.updateStatus("Downloading features",p,()=>w.getLines(e.refName,e.start,e.end,(a,i)=>{o.push(this.parseLine(s.columnNumbers,a,i))})),r&&o.length){let a=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY;for(const f of o){const H=f.fields[2];if(!m.includes(H)){const l=f.start-1;l<a&&(a=l),f.end>i&&(i=f.end)}}if(i>e.end||a<e.start){await this.getFeaturesHelper({...e,start:a,end:i},t,s,n,!1,e);return}}const x=o.map(a=>(a.fields[8]&&a.fields[8]!=="."?a.fields[8].includes("_lineHash")||(a.fields[8]+=`;_lineHash=${a.lineHash}`):a.fields[8]=`_lineHash=${a.lineHash}`,a.fields.join("	"))).join(`
`);for(const a of F(x))for(const i of a){const f=new _({data:L(i),id:`${this.id}-offset-${(u=(d=i.attributes)===null||d===void 0?void 0:d._lineHash)===null||u===void 0?void 0:u[0]}`});C(f.get("start"),f.get("end"),c.start,c.end)&&n.next(f)}n.complete()}catch(o){n.error(o)}}parseLine(e,t,s){const n=t.split("	");return{start:+n[e.start-1],end:+n[e.end-1],lineHash:s,fields:n}}freeResources(){}}export{k as default};
//# sourceMappingURL=Gff3TabixAdapter-BT9UGrEo.js.map
