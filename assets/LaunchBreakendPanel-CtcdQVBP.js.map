{"version":3,"mappings":"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","names":["BreakendMultiLevelOptionDialog","lazy","__vitePreload","n","BreakendSingleLevelOptionDialog","LocStringList","locStrings","model","session","getSession","_jsxs","_jsx","Typography","locString","index","Link","event","_a","view","e","LaunchBreakpointSplitViewPanel","feature","_b","simpleFeature","SimpleFeature","assemblyName","handleClose","LaunchBreakendPanel","props","pluginManager","getEnv","hasBreakpointSplitView","BaseCard"],"ignoreList":[0],"sources":["../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/LaunchBreakendPanel/LaunchBreakendPanel.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { lazy } from 'react';\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard';\nimport { SimpleFeature, getEnv, getSession } from '@jbrowse/core/util';\nimport { Link, Typography } from '@mui/material';\nconst BreakendMultiLevelOptionDialog = lazy(() => import('./BreakendMultiLevelOptionDialog'));\nconst BreakendSingleLevelOptionDialog = lazy(() => import('./BreakendSingleLevelOptionDialog'));\nfunction LocStringList({ locStrings, model, }) {\n    const session = getSession(model);\n    return (_jsxs(\"div\", { children: [_jsx(Typography, { children: \"Navigate to breakend endpoint in linear view:\" }), _jsx(\"ul\", { children: locStrings.map((locString, index) => (_jsxs(\"li\", { children: [locString, ' ', _jsx(Link, { href: \"#\", onClick: event => {\n                                var _a;\n                                event.preventDefault();\n                                const { view } = model;\n                                try {\n                                    if (view) {\n                                        (_a = view.navToLocString) === null || _a === void 0 ? void 0 : _a.call(view, locString);\n                                    }\n                                    else {\n                                        throw new Error('No view associated with this feature detail panel anymore');\n                                    }\n                                }\n                                catch (e) {\n                                    console.error(e);\n                                    session.notify(`${e}`);\n                                }\n                            }, children: \"(LGV)\" })] }, `${locString}-${index}`))) })] }));\n}\nfunction LaunchBreakpointSplitViewPanel({ locStrings, model, feature, }) {\n    var _a, _b;\n    const session = getSession(model);\n    const simpleFeature = new SimpleFeature(feature);\n    const assemblyName = (_b = (_a = model.view) === null || _a === void 0 ? void 0 : _a.displayedRegions[0]) === null || _b === void 0 ? void 0 : _b.assemblyName;\n    return (_jsxs(\"div\", { children: [_jsx(Typography, { children: \"Launch split view\" }), _jsx(\"ul\", { children: locStrings.map(locString => (_jsxs(\"li\", { children: [`${feature.refName}:${feature.start} // ${locString}`, ' ', _jsx(Link, { href: \"#\", onClick: event => {\n                                event.preventDefault();\n                                session.queueDialog(handleClose => [\n                                    BreakendMultiLevelOptionDialog,\n                                    {\n                                        handleClose,\n                                        session,\n                                        feature: simpleFeature,\n                                        stableViewId: `${model.id}_${assemblyName}_breakpointsplitview_multilevel`,\n                                        view: model.view,\n                                        assemblyName,\n                                    },\n                                ]);\n                            }, children: \"(top/bottom)\" }), ' ', _jsx(Link, { href: \"#\", onClick: event => {\n                                event.preventDefault();\n                                session.queueDialog(handleClose => [\n                                    BreakendSingleLevelOptionDialog,\n                                    {\n                                        handleClose,\n                                        session,\n                                        feature: simpleFeature,\n                                        stableViewId: `${model.id}_${assemblyName}_breakpointsplitview_singlelevel`,\n                                        view: model.view,\n                                        assemblyName,\n                                    },\n                                ]);\n                            }, children: \"(single row)\" })] }, JSON.stringify(locString)))) })] }));\n}\nexport default function LaunchBreakendPanel(props) {\n    const { model, locStrings, feature } = props;\n    const session = getSession(model);\n    const { pluginManager } = getEnv(session);\n    let hasBreakpointSplitView = false;\n    try {\n        hasBreakpointSplitView = !!pluginManager.getViewType('BreakpointSplitView');\n    }\n    catch (e) {\n    }\n    return (_jsxs(BaseCard, { ...props, title: \"Breakends\", children: [_jsx(LocStringList, { model: model, locStrings: locStrings }), hasBreakpointSplitView ? (_jsx(LaunchBreakpointSplitViewPanel, { model: model, locStrings: locStrings, feature: feature })) : null] }));\n}\n"],"file":"assets/LaunchBreakendPanel-CtcdQVBP.js"}