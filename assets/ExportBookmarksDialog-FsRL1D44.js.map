{"version":3,"file":"ExportBookmarksDialog-FsRL1D44.js","sources":["../../node_modules/@jbrowse/plugin-grid-bookmark/esm/GridBookmarkWidget/components/dialogs/ExportBookmarksDialog.js"],"sourcesContent":["import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { Dialog } from '@jbrowse/core/ui';\nimport GetAppIcon from '@mui/icons-material/GetApp';\nimport { Alert, Button, DialogActions, DialogContent, MenuItem, Select, Typography, } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nimport { downloadBookmarkFile } from '../../utils';\nconst useStyles = makeStyles()({\n    flexItem: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '5px',\n    },\n    container: {\n        display: 'flex',\n        flexFlow: 'column',\n        gap: '5px',\n    },\n});\nconst ExportBookmarksDialog = observer(function ({ model, onClose, }) {\n    const { classes } = useStyles();\n    const [fileType, setFileType] = useState('BED');\n    const { selectedBookmarks } = model;\n    const exportAll = selectedBookmarks.length === 0;\n    return (_jsxs(Dialog, { open: true, onClose: () => {\n            onClose();\n        }, title: \"Export bookmarks\", children: [_jsxs(DialogContent, { className: classes.container, children: [_jsx(Alert, { severity: \"info\", children: exportAll ? (_jsxs(_Fragment, { children: [_jsx(\"span\", { children: \"All bookmarks will be exported.\" }), _jsx(\"br\", {}), _jsx(\"span\", { children: \"Use the checkboxes to select individual bookmarks to export.\" })] })) : ('Only selected bookmarks will be exported.') }), _jsxs(\"div\", { className: classes.flexItem, children: [_jsx(Typography, { children: \"Format to download:\" }), _jsxs(Select, { size: \"small\", value: fileType, onChange: event => {\n                                    setFileType(event.target.value);\n                                }, children: [_jsx(MenuItem, { value: \"BED\", children: \"BED\" }), _jsx(MenuItem, { value: \"TSV\", children: \"TSV\" })] })] })] }), _jsx(DialogActions, { children: _jsx(Button, { variant: \"contained\", color: \"primary\", startIcon: _jsx(GetAppIcon, {}), onClick: () => {\n                        downloadBookmarkFile(fileType, model);\n                        onClose();\n                    }, children: \"Download\" }) })] }));\n});\nexport default ExportBookmarksDialog;\n"],"names":["useStyles","makeStyles","ExportBookmarksDialog","observer","model","onClose","classes","fileType","setFileType","useState","selectedBookmarks","exportAll","_jsxs","Dialog","DialogContent","_jsx","Alert","_Fragment","Typography","Select","event","MenuItem","DialogActions","Button","GetAppIcon","downloadBookmarkFile"],"mappings":"2hBAQA,MAAMA,EAAYC,EAAU,EAAG,CAC3B,SAAU,CACN,QAAS,OACT,WAAY,SACZ,IAAK,KACR,EACD,UAAW,CACP,QAAS,OACT,SAAU,SACV,IAAK,KACR,CACL,CAAC,EACKC,EAAwBC,EAAS,SAAU,CAAE,MAAAC,EAAO,QAAAC,CAAO,EAAK,CAClE,KAAM,CAAE,QAAAC,CAAS,EAAGN,EAAW,EACzB,CAACO,EAAUC,CAAW,EAAIC,EAAAA,SAAS,KAAK,EACxC,CAAE,kBAAAC,CAAiB,EAAKN,EACxBO,EAAYD,EAAkB,SAAW,EAC/C,OAAQE,EAAAA,KAAMC,EAAAA,OAAQ,CAAE,KAAM,GAAM,QAAS,IAAM,CAC3CR,EAAS,CACZ,EAAE,MAAO,mBAAoB,SAAU,CAACO,EAAAA,KAAME,EAAe,CAAE,UAAWR,EAAQ,UAAW,SAAU,CAACS,EAAAA,IAAKC,EAAO,CAAE,SAAU,OAAQ,SAAUL,EAAaC,EAAAA,KAAMK,EAAAA,SAAW,CAAE,SAAU,CAACF,EAAAA,IAAK,OAAQ,CAAE,SAAU,iCAAiC,CAAE,EAAGA,EAAI,IAAC,KAAM,CAAE,CAAA,EAAGA,EAAI,IAAC,OAAQ,CAAE,SAAU,8DAAgE,CAAA,CAAC,CAAC,CAAE,EAAM,2CAA8C,CAAA,EAAGH,EAAAA,KAAM,MAAO,CAAE,UAAWN,EAAQ,SAAU,SAAU,CAACS,EAAAA,IAAKG,EAAY,CAAE,SAAU,qBAAqB,CAAE,EAAGN,EAAK,KAACO,EAAQ,CAAE,KAAM,QAAS,MAAOZ,EAAU,SAAUa,GAAS,CACtjBZ,EAAYY,EAAM,OAAO,KAAK,CAClE,EAAmC,SAAU,CAACL,MAAKM,EAAU,CAAE,MAAO,MAAO,SAAU,KAAK,CAAE,EAAGN,MAAKM,EAAU,CAAE,MAAO,MAAO,SAAU,KAAK,CAAE,CAAC,EAAG,CAAC,CAAG,CAAA,CAAC,CAAC,CAAE,EAAGN,MAAKO,EAAe,CAAE,SAAUP,EAAAA,IAAKQ,EAAQ,CAAE,QAAS,YAAa,MAAO,UAAW,UAAWR,EAAAA,IAAKS,EAAY,CAAE,CAAA,EAAG,QAAS,IAAM,CAC/QC,EAAqBlB,EAAUH,CAAK,EACpCC,EAAS,CACZ,EAAE,SAAU,UAAU,CAAE,CAAG,CAAA,CAAC,CAAC,CAAE,CACpD,CAAC","x_google_ignoreList":[0]}