{"version":3,"file":"ClusterDialog-Q5ny2FSE.js","sources":["../../node_modules/@jbrowse/plugin-variants/esm/shared/components/ClusterDialog/ClusterDialogAuto.js","../../node_modules/@jbrowse/plugin-variants/esm/shared/components/ClusterDialog/ClusterDialogManual.js","../../node_modules/@jbrowse/plugin-variants/esm/shared/components/ClusterDialog/ClusterDialog.js"],"sourcesContent":["import { jsxs as _jsxs, jsx as _jsx, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { ErrorMessage } from '@jbrowse/core/ui';\nimport { getContainingView, getSession, isAbortException, } from '@jbrowse/core/util';\nimport { createStopToken, stopStopToken } from '@jbrowse/core/util/stopToken';\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks';\nimport { Button, DialogActions, DialogContent } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { isAlive } from 'mobx-state-tree';\nconst ClusterDialogAuto = observer(function ({ model, children, handleClose, }) {\n    const [progress, setProgress] = useState('');\n    const [error, setError] = useState();\n    const [stopToken, setStopToken] = useState('');\n    return (_jsxs(_Fragment, { children: [_jsxs(DialogContent, { children: [children, _jsxs(\"div\", { children: [progress ? (_jsxs(\"div\", { style: { padding: 50 }, children: [_jsxs(\"span\", { style: { width: 400 }, children: [\"Progress: \", progress] }), _jsx(Button, { onClick: () => {\n                                            stopStopToken(stopToken);\n                                        }, children: \"Stop\" })] })) : null, error ? _jsx(ErrorMessage, { error: error }) : null] })] }), _jsxs(DialogActions, { children: [_jsx(Button, { variant: \"contained\", onClick: async () => {\n                            try {\n                                setError(undefined);\n                                const view = getContainingView(model);\n                                if (!view.initialized) {\n                                    return;\n                                }\n                                const { rpcManager } = getSession(model);\n                                const { sourcesWithoutLayout, minorAlleleFrequencyFilter, adapterConfig, } = model;\n                                if (sourcesWithoutLayout) {\n                                    const sessionId = getRpcSessionId(model);\n                                    const stopToken = createStopToken();\n                                    setStopToken(stopToken);\n                                    const ret = (await rpcManager.call(sessionId, 'MultiVariantClusterGenotypeMatrix', {\n                                        regions: view.dynamicBlocks.contentBlocks,\n                                        sources: sourcesWithoutLayout,\n                                        minorAlleleFrequencyFilter,\n                                        sessionId,\n                                        adapterConfig,\n                                        stopToken,\n                                        statusCallback: (arg) => {\n                                            setProgress(arg);\n                                        },\n                                    }));\n                                    model.setLayout(ret.order.map(idx => {\n                                        const ret = sourcesWithoutLayout[idx];\n                                        if (!ret) {\n                                            throw new Error(`out of bounds at ${idx}`);\n                                        }\n                                        return ret;\n                                    }));\n                                }\n                                handleClose();\n                            }\n                            catch (e) {\n                                if (!isAbortException(e) && isAlive(model)) {\n                                    console.error(e);\n                                    setError(e);\n                                }\n                            }\n                            finally {\n                                setProgress('');\n                                setStopToken('');\n                            }\n                        }, children: \"Run clustering\" }), _jsx(Button, { variant: \"contained\", color: \"secondary\", onClick: () => {\n                            handleClose();\n                            if (stopToken) {\n                                stopStopToken(stopToken);\n                            }\n                        }, children: \"Cancel\" })] })] }));\n});\nexport default ClusterDialogAuto;\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport { ErrorMessage, LoadingEllipses } from '@jbrowse/core/ui';\nimport { getContainingView, getSession, isAbortException, useLocalStorage, } from '@jbrowse/core/util';\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks';\nimport { Button, DialogActions, DialogContent, FormControlLabel, Paper, Radio, RadioGroup, TextField, Typography, } from '@mui/material';\nimport copy from 'copy-to-clipboard';\nimport { saveAs } from 'file-saver';\nimport { observer } from 'mobx-react';\nimport { isAlive } from 'mobx-state-tree';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()(theme => ({\n    textAreaFont: {\n        fontFamily: 'Courier New',\n    },\n    mgap: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: theme.spacing(4),\n    },\n}));\nconst ClusterDialogManuals = observer(function ({ model, handleClose, children, }) {\n    const { classes } = useStyles();\n    const [paste, setPaste] = useState('');\n    const [ret, setRet] = useState();\n    const [error, setError] = useState();\n    const [loading, setLoading] = useState(false);\n    const [showAdvanced, setShowAdvanced] = useState(false);\n    const [clusterMethod, setClusterMethod] = useLocalStorage('cluster-clusterMethod', 'single');\n    useEffect(() => {\n        ;\n        (async () => {\n            try {\n                setError(undefined);\n                setRet(undefined);\n                setLoading(true);\n                const view = getContainingView(model);\n                if (!view.initialized) {\n                    return;\n                }\n                const { rpcManager } = getSession(model);\n                const { sourcesWithoutLayout, minorAlleleFrequencyFilter, adapterConfig, } = model;\n                const sessionId = getRpcSessionId(model);\n                const ret = (await rpcManager.call(sessionId, 'MultiVariantGetGenotypeMatrix', {\n                    regions: view.dynamicBlocks.contentBlocks,\n                    sources: sourcesWithoutLayout,\n                    minorAlleleFrequencyFilter,\n                    sessionId,\n                    adapterConfig,\n                }));\n                setRet(ret);\n            }\n            catch (e) {\n                if (!isAbortException(e) && isAlive(model)) {\n                    console.error(e);\n                    setError(e);\n                }\n            }\n            finally {\n                setLoading(false);\n            }\n        })();\n    }, [model]);\n    const results = ret\n        ? `inputMatrix<-matrix(c(${Object.values(ret)\n            .map(val => val.join(','))\n            .join(',\\n')}\n),nrow=${Object.values(ret).length},byrow=TRUE)\nrownames(inputMatrix)<-c(${Object.keys(ret)\n            .map(key => `'${key}'`)\n            .join(',')})\nresultClusters<-hclust(dist(inputMatrix), method='${clusterMethod}')\ncat(resultClusters$order,sep='\\\\n')`\n        : undefined;\n    const resultsTsv = ret\n        ? Object.entries(ret)\n            .map(([key, val]) => [key, ...val].join('\\t'))\n            .join('\\n')\n        : undefined;\n    return (_jsxs(_Fragment, { children: [_jsxs(DialogContent, { children: [children, _jsxs(Paper, { style: { padding: 16 }, children: [_jsxs(\"div\", { style: {\n                                    display: 'flex',\n                                    gap: '8px',\n                                    flexWrap: 'wrap',\n                                    marginBottom: '16px',\n                                }, children: [_jsx(Button, { variant: \"contained\", onClick: () => {\n                                            saveAs(new Blob([results || ''], {\n                                                type: 'text/plain;charset=utf-8',\n                                            }), 'cluster.R');\n                                        }, children: \"Download Rscript\" }), ' ', \"or\", ' ', _jsx(Button, { variant: \"contained\", onClick: () => {\n                                            copy(results || '');\n                                        }, children: \"Copy Rscript to clipboard\" }), ' ', \"or\", ' ', _jsx(Button, { variant: \"contained\", onClick: () => {\n                                            saveAs(new Blob([resultsTsv || ''], {\n                                                type: 'text/plain;charset=utf-8',\n                                            }), 'genotypes.tsv');\n                                        }, children: \"Download TSV\" }), _jsxs(\"div\", { children: [_jsx(Button, { variant: \"contained\", onClick: () => {\n                                                    setShowAdvanced(!showAdvanced);\n                                                }, children: showAdvanced\n                                                    ? 'Hide advanced options'\n                                                    : 'Show advanced options' }), showAdvanced ? (_jsxs(\"div\", { children: [_jsx(Typography, { variant: \"h6\", children: \"Advanced options\" }), _jsx(RadioGroup, { children: Object.entries({\n                                                            single: 'Single',\n                                                            complete: 'Complete',\n                                                        }).map(([key, val]) => (_jsx(FormControlLabel, { control: _jsx(Radio, { checked: clusterMethod === key, onChange: () => {\n                                                                    setClusterMethod(key);\n                                                                } }), label: val }, key))) })] })) : null] }), results ? (_jsx(\"div\", {})) : loading ? (_jsx(LoadingEllipses, { variant: \"h6\", title: \"Generating genotype matrix\" })) : error ? (_jsx(ErrorMessage, { error: error })) : null] }), _jsxs(\"div\", { children: [_jsx(Typography, { variant: \"subtitle2\", gutterBottom: true, style: { marginTop: '16px' }, children: \"Clustering Results:\" }), _jsx(TextField, { multiline: true, fullWidth: true, variant: \"outlined\", placeholder: \"Paste results from Rscript here (sequence of numbers, one per line, specifying the new ordering)\", rows: 10, value: paste, onChange: event => {\n                                            setPaste(event.target.value);\n                                        }, slotProps: {\n                                            input: {\n                                                classes: {\n                                                    input: classes.textAreaFont,\n                                                },\n                                            },\n                                        } })] })] })] }), _jsxs(DialogActions, { children: [_jsx(Button, { variant: \"contained\", onClick: () => {\n                            const { sourcesWithoutLayout } = model;\n                            if (sourcesWithoutLayout) {\n                                try {\n                                    model.setLayout(paste\n                                        .split('\\n')\n                                        .map(t => t.trim())\n                                        .filter(f => !!f)\n                                        .map(r => +r)\n                                        .map(idx => {\n                                        const ret = sourcesWithoutLayout[idx - 1];\n                                        if (!ret) {\n                                            throw new Error(`out of bounds at ${idx}`);\n                                        }\n                                        return ret;\n                                    }));\n                                }\n                                catch (e) {\n                                    console.error(e);\n                                    getSession(model).notifyError(`${e}`, e);\n                                }\n                            }\n                            handleClose();\n                        }, children: \"Apply clustering\" }), _jsx(Button, { variant: \"contained\", color: \"secondary\", onClick: () => {\n                            handleClose();\n                        }, children: \"Cancel\" })] })] }));\n});\nexport default ClusterDialogManuals;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { FormControlLabel, Radio, RadioGroup, Typography } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport ClusterDialogAuto from './ClusterDialogAuto';\nimport ClusterDialogManual from './ClusterDialogManual';\nfunction Header({ activeMode, setActiveMode, }) {\n    return (_jsxs(\"div\", { children: [_jsx(Typography, { style: { marginBottom: 30 }, children: \"This procedure will cluster the visible genotype data using hierarchical clustering\" }), _jsx(RadioGroup, { children: Object.entries({\n                    auto: (_jsx(\"div\", { children: \"Run in-app clustering (slow for large data, built in JS clustering)\" })),\n                    manual: (_jsx(\"div\", { children: \"Download R script to run clustering (faster for large data, uses hclust, may be more accurate)\" })),\n                }).map(([key, val]) => (_jsx(FormControlLabel, { control: _jsx(Radio, { checked: activeMode === key, onChange: () => {\n                            setActiveMode(key);\n                        } }), label: val }, key))) })] }));\n}\nconst ClusterDialog = observer(function ({ model, handleClose, }) {\n    const [activeMode, setActiveMode] = useState('auto');\n    return (_jsx(Dialog, { open: true, title: \"Cluster by genotype\", onClose: (_, reason) => {\n            if (reason !== 'backdropClick') {\n                handleClose();\n            }\n        }, children: activeMode === 'auto' ? (_jsx(ClusterDialogAuto, { model: model, handleClose: handleClose, children: _jsx(Header, { activeMode: activeMode, setActiveMode: setActiveMode }) })) : (_jsx(ClusterDialogManual, { model: model, handleClose: handleClose, children: _jsx(Header, { activeMode: activeMode, setActiveMode: setActiveMode }) })) }));\n});\nexport default ClusterDialog;\n"],"names":["ClusterDialogAuto","observer","model","children","handleClose","progress","setProgress","useState","error","setError","stopToken","setStopToken","_jsxs","_Fragment","DialogContent","_jsx","Button","stopStopToken","ErrorMessage","DialogActions","view","getContainingView","rpcManager","getSession","sourcesWithoutLayout","minorAlleleFrequencyFilter","adapterConfig","sessionId","getRpcSessionId","createStopToken","ret","arg","idx","e","isAbortException","isAlive","useStyles","makeStyles","theme","ClusterDialogManuals","classes","paste","setPaste","setRet","loading","setLoading","showAdvanced","setShowAdvanced","clusterMethod","setClusterMethod","useLocalStorage","useEffect","results","val","key","resultsTsv","Paper","saveAs","copy","Typography","RadioGroup","FormControlLabel","Radio","LoadingEllipses","TextField","event","t","f","r","Header","activeMode","setActiveMode","ClusterDialog","Dialog","_","reason","ClusterDialogManual"],"mappings":"4LASA,MAAMA,EAAoBC,EAAS,SAAU,CAAE,MAAAC,EAAO,SAAAC,EAAU,YAAAC,CAAW,EAAK,CAC5E,KAAM,CAACC,EAAUC,CAAW,EAAIC,EAAAA,SAAS,EAAE,EACrC,CAACC,EAAOC,CAAQ,EAAIF,WAAU,EAC9B,CAACG,EAAWC,CAAY,EAAIJ,EAAAA,SAAS,EAAE,EAC7C,OAAQK,EAAAA,KAAMC,EAAAA,SAAW,CAAE,SAAU,CAACD,OAAME,EAAe,CAAE,SAAU,CAACX,EAAUS,OAAM,MAAO,CAAE,SAAU,CAACP,EAAYO,OAAM,MAAO,CAAE,MAAO,CAAE,QAAS,EAAI,EAAE,SAAU,CAACA,EAAK,KAAC,OAAQ,CAAE,MAAO,CAAE,MAAO,GAAG,EAAI,SAAU,CAAC,aAAcP,CAAQ,CAAG,CAAA,EAAGU,EAAAA,IAAKC,EAAQ,CAAE,QAAS,IAAM,CAC9OC,EAAcP,CAAS,CAC1B,EAAE,SAAU,MAAM,CAAE,CAAC,CAAC,CAAE,EAAK,KAAMF,EAAQO,EAAAA,IAAKG,EAAAA,aAAc,CAAE,MAAOV,CAAO,CAAA,EAAI,IAAI,CAAG,CAAA,CAAC,CAAC,CAAE,EAAGI,OAAMO,EAAe,CAAE,SAAU,CAACJ,EAAI,IAACC,EAAQ,CAAE,QAAS,YAAa,QAAS,SAAY,CACzM,GAAI,CACAP,EAAS,MAAS,EAClB,MAAMW,EAAOC,EAAiB,kBAACnB,CAAK,EACpC,GAAI,CAACkB,EAAK,YACN,OAEJ,KAAM,CAAE,WAAAE,CAAU,EAAKC,EAAU,WAACrB,CAAK,EACjC,CAAE,qBAAAsB,EAAsB,2BAAAC,EAA4B,cAAAC,CAAgB,EAAGxB,EAC7E,GAAIsB,EAAsB,CACtB,MAAMG,EAAYC,EAAe,gBAAC1B,CAAK,EACjCQ,EAAYmB,EAAiB,EACnClB,EAAaD,CAAS,EACtB,MAAMoB,EAAO,MAAMR,EAAW,KAAKK,EAAW,oCAAqC,CAC/E,QAASP,EAAK,cAAc,cAC5B,QAASI,EACT,2BAAAC,EACA,UAAAE,EACA,cAAAD,EACA,UAAAhB,EACA,eAAiBqB,GAAQ,CACrBzB,EAAYyB,CAAG,CAClB,CACzC,CAAqC,EACD7B,EAAM,UAAU4B,EAAI,MAAM,IAAIE,GAAO,CACjC,MAAMF,EAAMN,EAAqBQ,CAAG,EACpC,GAAI,CAACF,EACD,MAAM,IAAI,MAAM,oBAAoBE,CAAG,EAAE,EAE7C,OAAOF,CAC/C,CAAqC,CAAC,CACtC,CACgC1B,EAAa,CAC7C,OACmC6B,EAAG,CACF,CAACC,EAAAA,iBAAiBD,CAAC,GAAKE,EAAQjC,CAAK,IACrC,QAAQ,MAAM+B,CAAC,EACfxB,EAASwB,CAAC,EAE9C,QACoC,CACJ3B,EAAY,EAAE,EACdK,EAAa,EAAE,CAC/C,CACyB,EAAE,SAAU,iBAAkB,EAAGI,EAAI,IAACC,EAAQ,CAAE,QAAS,YAAa,MAAO,YAAa,QAAS,IAAM,CACtGZ,EAAa,EACTM,GACAO,EAAcP,CAAS,CAE9B,EAAE,SAAU,QAAQ,CAAE,CAAC,CAAG,CAAA,CAAC,CAAC,CAAE,CACvD,CAAC,ECtDK0B,EAAYC,EAAY,EAACC,IAAU,CACrC,aAAc,CACV,WAAY,aACf,EACD,KAAM,CACF,QAAS,OACT,cAAe,SACf,IAAKA,EAAM,QAAQ,CAAC,CACvB,CACL,EAAE,EACIC,EAAuBtC,EAAS,SAAU,CAAE,MAAAC,EAAO,YAAAE,EAAa,SAAAD,CAAQ,EAAK,CAC/E,KAAM,CAAE,QAAAqC,CAAS,EAAGJ,EAAW,EACzB,CAACK,EAAOC,CAAQ,EAAInC,EAAAA,SAAS,EAAE,EAC/B,CAACuB,EAAKa,CAAM,EAAIpC,WAAU,EAC1B,CAACC,EAAOC,CAAQ,EAAIF,WAAU,EAC9B,CAACqC,EAASC,CAAU,EAAItC,EAAAA,SAAS,EAAK,EACtC,CAACuC,EAAcC,CAAe,EAAIxC,EAAAA,SAAS,EAAK,EAChD,CAACyC,EAAeC,CAAgB,EAAIC,EAAAA,gBAAgB,wBAAyB,QAAQ,EAC3FC,EAAAA,UAAU,IAAM,EAEX,SAAY,CACT,GAAI,CACA1C,EAAS,MAAS,EAClBkC,EAAO,MAAS,EAChBE,EAAW,EAAI,EACf,MAAMzB,EAAOC,EAAiB,kBAACnB,CAAK,EACpC,GAAI,CAACkB,EAAK,YACN,OAEJ,KAAM,CAAE,WAAAE,CAAU,EAAKC,EAAU,WAACrB,CAAK,EACjC,CAAE,qBAAAsB,EAAsB,2BAAAC,EAA4B,cAAAC,CAAgB,EAAGxB,EACvEyB,EAAYC,EAAe,gBAAC1B,CAAK,EACjC4B,EAAO,MAAMR,EAAW,KAAKK,EAAW,gCAAiC,CAC3E,QAASP,EAAK,cAAc,cAC5B,QAASI,EACT,2BAAAC,EACA,UAAAE,EACA,cAAAD,CACpB,CAAiB,EACDiB,EAAOb,CAAG,CAC1B,OACmBG,EAAG,CACF,CAACC,EAAAA,iBAAiBD,CAAC,GAAKE,EAAQjC,CAAK,IACrC,QAAQ,MAAM+B,CAAC,EACfxB,EAASwB,CAAC,EAE9B,QACoB,CACJY,EAAW,EAAK,CAChC,CACA,GAAY,CACZ,EAAO,CAAC3C,CAAK,CAAC,EACV,MAAMkD,EAAUtB,EACV,yBAAyB,OAAO,OAAOA,CAAG,EACvC,IAAIuB,GAAOA,EAAI,KAAK,GAAG,CAAC,EACxB,KAAK;AAAA,CAAK,CAAC;AAAA,SACf,OAAO,OAAOvB,CAAG,EAAE,MAAM;AAAA,2BACP,OAAO,KAAKA,CAAG,EAC7B,IAAIwB,GAAO,IAAIA,CAAG,GAAG,EACrB,KAAK,GAAG,CAAC;AAAA,oDAC8BN,CAAa;AAAA,qCAEvD,OACAO,EAAazB,EACb,OAAO,QAAQA,CAAG,EACf,IAAI,CAAC,CAACwB,EAAKD,CAAG,IAAM,CAACC,EAAK,GAAGD,CAAG,EAAE,KAAK,GAAI,CAAC,EAC5C,KAAK;AAAA,CAAI,EACZ,OACN,OAAQzC,EAAK,KAACC,WAAW,CAAE,SAAU,CAACD,EAAK,KAACE,EAAe,CAAE,SAAU,CAACX,EAAUS,EAAAA,KAAM4C,EAAO,CAAE,MAAO,CAAE,QAAS,EAAE,EAAI,SAAU,CAAC5C,EAAK,KAAC,MAAO,CAAE,MAAO,CAC1H,QAAS,OACT,IAAK,MACL,SAAU,OACV,aAAc,MAClD,EAAmC,SAAU,CAACG,MAAKC,EAAQ,CAAE,QAAS,YAAa,QAAS,IAAM,CACtDyC,EAAAA,OAAO,IAAI,KAAK,CAACL,GAAW,EAAE,EAAG,CAC7B,KAAM,0BACT,CAAA,EAAG,WAAW,CAClB,EAAE,SAAU,kBAAkB,CAAE,EAAG,IAAK,KAAM,IAAKrC,EAAI,IAACC,EAAQ,CAAE,QAAS,YAAa,QAAS,IAAM,CACpG0C,EAAKN,GAAW,EAAE,CACrB,EAAE,SAAU,2BAA2B,CAAE,EAAG,IAAK,KAAM,IAAKrC,EAAI,IAACC,EAAQ,CAAE,QAAS,YAAa,QAAS,IAAM,CAC7GyC,EAAAA,OAAO,IAAI,KAAK,CAACF,GAAc,EAAE,EAAG,CAChC,KAAM,0BACT,CAAA,EAAG,eAAe,CACtB,EAAE,SAAU,cAAc,CAAE,EAAG3C,EAAK,KAAC,MAAO,CAAE,SAAU,CAACG,EAAAA,IAAKC,EAAQ,CAAE,QAAS,YAAa,QAAS,IAAM,CAClG+B,EAAgB,CAACD,CAAY,CAChC,EAAE,SAAUA,EACP,wBACA,uBAAyB,CAAA,EAAGA,EAAgBlC,EAAK,KAAC,MAAO,CAAE,SAAU,CAACG,EAAI,IAAC4C,EAAY,CAAE,QAAS,KAAM,SAAU,kBAAkB,CAAE,EAAG5C,EAAAA,IAAK6C,EAAY,CAAE,SAAU,OAAO,QAAQ,CAC/K,OAAQ,SACR,SAAU,UACtE,CAAyD,EAAE,IAAI,CAAC,CAACN,EAAKD,CAAG,IAAOtC,EAAAA,IAAK8C,EAAkB,CAAE,QAAS9C,EAAAA,IAAK+C,EAAO,CAAE,QAASd,IAAkBM,EAAK,SAAU,IAAM,CAC5GL,EAAiBK,CAAG,CACxF,CAAmE,CAAA,EAAG,MAAOD,CAAK,EAAEC,CAAG,CAAE,EAAG,CAAC,CAAG,CAAA,EAAK,IAAI,CAAC,CAAE,EAAGF,EAAWrC,EAAI,IAAC,MAAO,EAAE,EAAK6B,EAAW7B,EAAI,IAACgD,EAAe,gBAAE,CAAE,QAAS,KAAM,MAAO,6BAA8B,EAAKvD,EAASO,EAAI,IAACG,EAAY,aAAE,CAAE,MAAOV,CAAK,CAAE,EAAK,IAAI,EAAG,EAAGI,EAAK,KAAC,MAAO,CAAE,SAAU,CAACG,EAAI,IAAC4C,EAAY,CAAE,QAAS,YAAa,aAAc,GAAM,MAAO,CAAE,UAAW,MAAQ,EAAE,SAAU,qBAAuB,CAAA,EAAG5C,EAAAA,IAAKiD,EAAW,CAAE,UAAW,GAAM,UAAW,GAAM,QAAS,WAAY,YAAa,mGAAoG,KAAM,GAAI,MAAOvB,EAAO,SAAUwB,GAAS,CACtnBvB,EAASuB,EAAM,OAAO,KAAK,CAC9B,EAAE,UAAW,CACV,MAAO,CACH,QAAS,CACL,MAAOzB,EAAQ,YAClB,CACJ,CAC7C,CAA2C,CAAA,CAAC,CAAC,CAAE,CAAC,CAAG,CAAA,CAAC,CAAC,CAAE,EAAG5B,OAAMO,EAAe,CAAE,SAAU,CAACJ,EAAAA,IAAKC,EAAQ,CAAE,QAAS,YAAa,QAAS,IAAM,CACpH,KAAM,CAAE,qBAAAQ,CAAoB,EAAKtB,EACjC,GAAIsB,EACA,GAAI,CACAtB,EAAM,UAAUuC,EACX,MAAM;AAAA,CAAI,EACV,IAAIyB,GAAKA,EAAE,KAAM,CAAA,EACjB,OAAOC,GAAK,CAAC,CAACA,CAAC,EACf,IAAIC,GAAK,CAACA,CAAC,EACX,IAAIpC,GAAO,CACZ,MAAMF,EAAMN,EAAqBQ,EAAM,CAAC,EACxC,GAAI,CAACF,EACD,MAAM,IAAI,MAAM,oBAAoBE,CAAG,EAAE,EAE7C,OAAOF,CAC/C,CAAqC,CAAC,CACtC,OACuCG,EAAG,CACN,QAAQ,MAAMA,CAAC,EACfV,EAAU,WAACrB,CAAK,EAAE,YAAY,GAAG+B,CAAC,GAAIA,CAAC,CAC3E,CAE4B7B,EAAa,CAChB,EAAE,SAAU,mBAAoB,EAAGW,EAAI,IAACC,EAAQ,CAAE,QAAS,YAAa,MAAO,YAAa,QAAS,IAAM,CACxGZ,EAAa,CAChB,EAAE,SAAU,QAAQ,CAAE,CAAC,CAAG,CAAA,CAAC,CAAC,CAAE,CACvD,CAAC,EClID,SAASiE,EAAO,CAAE,WAAAC,EAAY,cAAAC,GAAkB,CAC5C,OAAQ3D,EAAK,KAAC,MAAO,CAAE,SAAU,CAACG,EAAAA,IAAK4C,EAAY,CAAE,MAAO,CAAE,aAAc,EAAE,EAAI,SAAU,qFAAqF,CAAE,EAAG5C,EAAAA,IAAK6C,EAAY,CAAE,SAAU,OAAO,QAAQ,CAClN,KAAO7C,EAAI,IAAC,MAAO,CAAE,SAAU,qEAAuE,CAAA,EACtG,OAASA,EAAI,IAAC,MAAO,CAAE,SAAU,gGAAkG,CAAA,CACvJ,CAAiB,EAAE,IAAI,CAAC,CAACuC,EAAKD,CAAG,IAAOtC,EAAAA,IAAK8C,EAAkB,CAAE,QAAS9C,EAAAA,IAAK+C,EAAO,CAAE,QAASQ,IAAehB,EAAK,SAAU,IAAM,CACzGiB,EAAcjB,CAAG,CAC7C,EAA2B,EAAG,MAAOD,CAAK,EAAEC,CAAG,CAAE,CAAC,CAAE,CAAC,EAAG,CACxD,CACK,MAACkB,EAAgBvE,EAAS,SAAU,CAAE,MAAAC,EAAO,YAAAE,CAAW,EAAK,CAC9D,KAAM,CAACkE,EAAYC,CAAa,EAAIhE,EAAAA,SAAS,MAAM,EACnD,OAAQQ,MAAK0D,EAAAA,OAAQ,CAAE,KAAM,GAAM,MAAO,sBAAuB,QAAS,CAACC,EAAGC,IAAW,CAC7EA,IAAW,iBACXvE,EAAa,CAE7B,EAAW,SAAUkE,IAAe,OAAUvD,EAAI,IAACf,EAAmB,CAAE,MAAOE,EAAO,YAAaE,EAAa,SAAUW,EAAAA,IAAKsD,EAAQ,CAAE,WAAYC,EAAY,cAAeC,CAAe,CAAA,CAAG,CAAA,EAAMxD,EAAAA,IAAK6D,EAAqB,CAAE,MAAO1E,EAAO,YAAaE,EAAa,SAAUW,EAAAA,IAAKsD,EAAQ,CAAE,WAAYC,EAAY,cAAeC,EAAe,CAAC,CAAE,EAAI,CAClW,CAAC","x_google_ignoreList":[0,1,2]}