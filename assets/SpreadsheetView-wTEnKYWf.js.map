{"version":3,"mappings":";2WAIO,MAAMA,EAAgB,IAAMC,EAAY,OAAC,IAAI,ECD9CC,EAAsBC,EAAS,SAAU,CAAE,MAAAC,GAAU,CACvD,KAAM,CAAE,KAAAC,EAAM,gBAAAC,EAAiB,eAAAC,CAAgB,EAAGH,EAC5CI,EAASR,EAAe,EAC9B,OAAOK,GAAQC,EAAmBG,MAAKC,EAAU,CAAE,OAAQF,EAAQ,kBAAmB,GAAM,mBAAoB,GAAI,sBAAuBD,EAAgB,oBAAqB,IAAM,CAC9K,WAAW,IAAM,CACTC,EAAO,SACPJ,EAAM,eAAeI,EAAO,QAAQ,MAAM,iBAAiB,CAE/E,CAAa,CACb,EAAW,8BAA+B,GAAK,CACnCJ,EAAM,kBAAkB,CAAC,CACrC,EAAW,UAAW,GAAI,WAAYC,EAAK,OAAS,IAAK,UAAW,CACxD,QAAS,CACL,gBAAiB,EACpB,CACb,EAAW,YAAa,GAAM,KAAMA,EAAM,QAASC,CAAiB,GAAK,IACzE,CAAC,ECbKK,EAAYC,EAAY,EAACC,IAAU,CACrC,YAAa,CACT,SAAU,OACV,SAAU,WACV,aAAcA,EAAM,QAAQ,CAAC,EAC7B,WAAYA,EAAM,QAAQ,WAAW,KACxC,EACD,aAAc,CACV,OAAQ,EACR,UAAW,aACX,WAAYA,EAAM,QAAQ,OAAO,SACjC,UAAW,mBACd,CACL,EAAE,EACIC,EAAwBX,EAAS,SAAU,CAAE,MAAAC,GAAU,CACzD,KAAM,CAACW,EAAeC,CAAgB,EAAIC,WAAS,CAAC,EAC9C,CAAE,QAAAC,CAAS,EAAGP,EAAW,EACzB,CAAE,YAAAQ,EAAa,yBAAAC,EAA0B,OAAAC,CAAQ,EAAGjB,EAC1D,OAAOe,EAAeG,EAAK,KAACC,WAAW,CAAE,SAAU,CAACd,MAAK,MAAO,CAAE,MAAO,CAAE,OAAAY,CAAM,EAAI,UAAWH,EAAQ,YAAa,SAAUT,EAAI,IAACP,EAAqB,CAAE,MAAOiB,CAAW,CAAE,CAAC,CAAE,EAAGC,EAA2B,KAAQX,MAAKe,eAAc,CAAE,YAAa,IAAM,CAChPR,EAAiBK,CAAM,CAC3C,EAAmB,OAAQ,CAACI,EAAGC,IAAStB,EAAM,UAAUW,EAAgBW,CAAI,EAAG,UAAWR,EAAQ,YAAc,EAAE,CAAC,CAAE,EAAMT,MAAK,MAAO,CAAE,SAAU,SAAS,CAAE,CAC9J,CAAC,ECvBKkB,EAAeC,OAAK,IAAKC,EAAA,IAAC,OAAO,4BAAgB,mDAAC,EAClDC,EAAuB3B,EAAS,SAAU,CAAE,MAAAC,GAAU,CACxD,IAAI2B,EACJ,MAAU,GAAAA,EAAK3B,EAAM,eAAiB,MAAQ2B,IAAO,SAAkBA,EAAG,YAAoHtB,EAAI,IAACK,EAAuB,CAAE,MAAOV,CAAO,GAAhJK,MAAKuB,WAAU,CAAE,SAAU,KAAM,SAAUvB,MAAKkB,EAAc,CAAE,MAAOvB,EAAM,YAAY,CAAE,CAAC,CAAE,CAC5L,CAAC","names":["useGridApiRef","React.useRef","SpreadsheetDataGrid","observer","model","rows","dataGridColumns","visibleColumns","apiRef","_jsx","DataGrid","useStyles","makeStyles","theme","SpreadsheetViewActual","initialHeight","setInitialHeight","useState","classes","spreadsheet","hideVerticalResizeHandle","height","_jsxs","_Fragment","ResizeHandle","_","dist","ImportWizard","lazy","__vitePreload","SpreadsheetContainer","_a","Suspense"],"ignoreList":[0,1,2,3],"sources":["../../node_modules/@mui/x-data-grid/esm/hooks/utils/useGridApiRef.js","../../node_modules/@jbrowse/plugin-spreadsheet-view/esm/SpreadsheetView/components/SpreadsheetDataGrid.js","../../node_modules/@jbrowse/plugin-spreadsheet-view/esm/SpreadsheetView/components/SpreadsheetViewActual.js","../../node_modules/@jbrowse/plugin-spreadsheet-view/esm/SpreadsheetView/components/SpreadsheetView.js"],"sourcesContent":["import * as React from 'react';\n/**\n * Hook that instantiate a [[GridApiRef]].\n */\nexport const useGridApiRef = () => React.useRef(null);","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { DataGrid, useGridApiRef } from '@mui/x-data-grid';\nimport { observer } from 'mobx-react';\nconst SpreadsheetDataGrid = observer(function ({ model, }) {\n    const { rows, dataGridColumns, visibleColumns } = model;\n    const apiRef = useGridApiRef();\n    return rows && dataGridColumns ? (_jsx(DataGrid, { apiRef: apiRef, checkboxSelection: true, columnHeaderHeight: 35, columnVisibilityModel: visibleColumns, onFilterModelChange: () => {\n            setTimeout(() => {\n                if (apiRef.current) {\n                    model.setVisibleRows(apiRef.current.state.visibleRowsLookup);\n                }\n            });\n        }, onColumnVisibilityModelChange: n => {\n            model.setVisibleColumns(n);\n        }, rowHeight: 25, hideFooter: rows.length < 100, slotProps: {\n            toolbar: {\n                showQuickFilter: true,\n            },\n        }, showToolbar: true, rows: rows, columns: dataGridColumns })) : null;\n});\nexport default SpreadsheetDataGrid;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { ResizeHandle } from '@jbrowse/core/ui';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nimport SpreadsheetDataGrid from './SpreadsheetDataGrid';\nconst useStyles = makeStyles()(theme => ({\n    contentArea: {\n        overflow: 'auto',\n        position: 'relative',\n        marginBottom: theme.spacing(1),\n        background: theme.palette.background.paper,\n    },\n    resizeHandle: {\n        height: 5,\n        boxSizing: 'border-box',\n        background: theme.palette.action.disabled,\n        borderTop: '1px solid #fafafa',\n    },\n}));\nconst SpreadsheetViewActual = observer(function ({ model, }) {\n    const [initialHeight, setInitialHeight] = useState(0);\n    const { classes } = useStyles();\n    const { spreadsheet, hideVerticalResizeHandle, height } = model;\n    return spreadsheet ? (_jsxs(_Fragment, { children: [_jsx(\"div\", { style: { height }, className: classes.contentArea, children: _jsx(SpreadsheetDataGrid, { model: spreadsheet }) }), hideVerticalResizeHandle ? null : (_jsx(ResizeHandle, { onMouseDown: () => {\n                    setInitialHeight(height);\n                }, onDrag: (_, dist) => model.setHeight(initialHeight - dist), className: classes.resizeHandle }))] })) : (_jsx(\"div\", { children: \"Unknown\" }));\n});\nexport default SpreadsheetViewActual;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Suspense, lazy } from 'react';\nimport { observer } from 'mobx-react';\nimport SpreadsheetViewActual from './SpreadsheetViewActual';\nconst ImportWizard = lazy(() => import('./ImportWizard'));\nconst SpreadsheetContainer = observer(function ({ model, }) {\n    var _a;\n    return !((_a = model.spreadsheet) === null || _a === void 0 ? void 0 : _a.initialized) ? (_jsx(Suspense, { fallback: null, children: _jsx(ImportWizard, { model: model.importWizard }) })) : (_jsx(SpreadsheetViewActual, { model: model }));\n});\nexport default SpreadsheetContainer;\n"],"file":"assets/SpreadsheetView-wTEnKYWf.js"}