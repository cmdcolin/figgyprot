{"version":3,"file":"drawPhased-Cd5I2PNP.js","sources":["../../node_modules/@jbrowse/plugin-variants/esm/shared/constants.js","../../node_modules/@jbrowse/plugin-variants/esm/shared/drawAlleleCount.js","../../node_modules/@jbrowse/plugin-variants/esm/shared/drawPhased.js"],"sourcesContent":["export const fudgeFactor = 0.6;\nexport const f2 = fudgeFactor / 2;\n","import { colord } from '@jbrowse/core/util/colord';\nimport { f2 } from './constants';\nfunction getColorAlleleCount(alleles, mostFrequentAlt) {\n    const total = alleles.length;\n    let alt = 0;\n    let uncalled = 0;\n    let alt2 = 0;\n    let ref = 0;\n    for (const allele of alleles) {\n        if (allele === mostFrequentAlt) {\n            alt++;\n        }\n        else if (allele === '0') {\n            ref++;\n        }\n        else if (allele === '.') {\n            uncalled++;\n        }\n        else {\n            alt2++;\n        }\n    }\n    if (ref === total) {\n        return `#ccc`;\n    }\n    else {\n        let a1;\n        if (alt) {\n            a1 = colord(`hsl(200,50%,${80 - (alt / total) * 50}%)`);\n        }\n        if (alt2) {\n            const l = `hsla(0,100%,20%,${alt2 / total})`;\n            a1 = a1 ? a1.mix(l) : colord(l);\n        }\n        if (uncalled) {\n            const l = `hsl(50,50%,50%,${uncalled / total})`;\n            a1 = a1 ? a1.mix(l) : colord(l);\n        }\n        return (a1 === null || a1 === void 0 ? void 0 : a1.toHex()) || 'black';\n    }\n}\nexport function drawColorAlleleCount(alleles, ctx, x, y, w, h, mostFrequentAlt) {\n    ctx.fillStyle = getColorAlleleCount(alleles, mostFrequentAlt);\n    ctx.fillRect(x - f2, y - f2, w + f2, h + f2);\n}\n","import { set1 } from '@jbrowse/core/ui/colors';\nimport { f2 } from './constants';\nimport { colorify } from './util';\nfunction getColorPhased(alleles, HP) {\n    const c = +alleles[HP];\n    return c ? set1[c - 1] || 'black' : '#ccc';\n}\nfunction getColorPhasedWithPhaseSet(alleles, HP, PS) {\n    const c = +alleles[HP];\n    return c ? colorify(+PS) || 'black' : '#ccc';\n}\nexport function drawPhased(alleles, ctx, x, y, w, h, HP, PS) {\n    ctx.fillStyle =\n        PS !== undefined\n            ? getColorPhasedWithPhaseSet(alleles, HP, PS)\n            : getColorPhased(alleles, HP);\n    ctx.fillRect(x - f2, y - f2, w + f2, h + f2);\n}\n"],"names":["fudgeFactor","f2","getColorAlleleCount","alleles","mostFrequentAlt","total","alt","uncalled","alt2","ref","allele","a1","colord","l","drawColorAlleleCount","ctx","x","y","w","h","getColorPhased","HP","c","set1","getColorPhasedWithPhaseSet","PS","colorify","drawPhased"],"mappings":"uFAAO,MAAMA,EAAc,GACdC,EAAKD,EAAc,ECChC,SAASE,EAAoBC,EAASC,EAAiB,CACnD,MAAMC,EAAQF,EAAQ,OACtB,IAAIG,EAAM,EACNC,EAAW,EACXC,EAAO,EACPC,EAAM,EACV,UAAWC,KAAUP,EACbO,IAAWN,EACXE,IAEKI,IAAW,IAChBD,IAEKC,IAAW,IAChBH,IAGAC,IAGR,GAAIC,IAAQJ,EACR,MAAO,OAEN,CACD,IAAIM,EAIJ,GAHIL,IACAK,EAAKC,EAAAA,OAAO,eAAe,GAAMN,EAAMD,EAAS,EAAE,IAAI,GAEtDG,EAAM,CACN,MAAMK,EAAI,mBAAmBL,EAAOH,CAAK,IACzCM,EAAKA,EAAKA,EAAG,IAAIE,CAAC,EAAID,EAAM,OAACC,CAAC,CAC1C,CACQ,GAAIN,EAAU,CACV,MAAMM,EAAI,kBAAkBN,EAAWF,CAAK,IAC5CM,EAAKA,EAAKA,EAAG,IAAIE,CAAC,EAAID,EAAM,OAACC,CAAC,CAC1C,CACQ,OAAQF,GAAO,KAAwB,OAASA,EAAG,MAAK,IAAO,OACvE,CACA,CACO,SAASG,EAAqBX,EAASY,EAAKC,EAAGC,EAAGC,EAAGC,EAAGf,EAAiB,CAC5EW,EAAI,UAAYb,EAAoBC,EAASC,CAAe,EAC5DW,EAAI,SAASC,EAAIf,EAAIgB,EAAIhB,EAAIiB,EAAIjB,EAAIkB,EAAIlB,CAAE,CAC/C,CCzCA,SAASmB,EAAejB,EAASkB,EAAI,CACjC,MAAMC,EAAI,CAACnB,EAAQkB,CAAE,EACrB,OAAOC,EAAIC,EAAKD,EAAI,CAAC,GAAK,QAAU,MACxC,CACA,SAASE,EAA2BrB,EAASkB,EAAII,EAAI,CAEjD,MADU,CAACtB,EAAQkB,CAAE,EACVK,EAAS,CAACD,CAAE,GAAK,QAAU,MAC1C,CACO,SAASE,EAAWxB,EAASY,EAAKC,EAAGC,EAAGC,EAAGC,EAAGE,EAAII,EAAI,CACzDV,EAAI,UACAU,IAAO,OACDD,EAA2BrB,EAASkB,EAAII,CAAE,EAC1CL,EAAejB,EAASkB,CAAE,EACpCN,EAAI,SAASC,EAAIf,EAAIgB,EAAIhB,EAAIiB,EAAIjB,EAAIkB,EAAIlB,CAAE,CAC/C","x_google_ignoreList":[0,1,2]}