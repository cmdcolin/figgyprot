{"version":3,"file":"GroupByDialog-ub55-dLz.js","sources":["../../node_modules/@jbrowse/plugin-alignments/esm/LinearPileupDisplay/components/GroupByDialog.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport { Dialog, ErrorMessage, LoadingEllipses } from '@jbrowse/core/ui';\nimport { getContainingTrack, getContainingView, getSession, useDebounce, } from '@jbrowse/core/util';\nimport { Button, DialogActions, DialogContent, MenuItem, TextField, Typography, } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { getSnapshot } from 'mobx-state-tree';\nimport { getUniqueTags } from '../../shared/getUniqueTags';\nimport { defaultFilterFlags, negFlags, posFlags } from '../../shared/util';\nconst GroupByTagDialog = observer(function (props) {\n    const { model, handleClose } = props;\n    const [tag, setGroupByTag] = useState('');\n    const [tagSet, setGroupByTagSet] = useState();\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState();\n    const validTag = /^[A-Za-z][A-Za-z0-9]$/.exec(tag);\n    const isInvalid = tag.length === 2 && !validTag;\n    const debouncedTag = useDebounce(tag, 1000);\n    const [type, setType] = useState('');\n    useEffect(() => {\n        ;\n        (async () => {\n            try {\n                if (!isInvalid) {\n                    setError(undefined);\n                    setLoading(true);\n                    const vals = await getUniqueTags({\n                        self: model,\n                        tag: debouncedTag,\n                        blocks: getContainingView(model)\n                            .staticBlocks,\n                    });\n                    setGroupByTagSet(vals);\n                }\n            }\n            catch (e) {\n                console.error(e);\n                setError(e);\n            }\n            finally {\n                setLoading(false);\n            }\n        })();\n    }, [model, isInvalid, debouncedTag]);\n    return (_jsxs(Dialog, { open: true, onClose: handleClose, title: \"Group by\", children: [_jsxs(DialogContent, { children: [_jsx(Typography, { children: \"NOTE: this will create new session tracks with the \\\"filter by\\\" set to the values chosen here rather than affecting the current track state\" }), _jsxs(TextField, { fullWidth: true, value: type, onChange: event => {\n                            setType(event.target.value);\n                        }, label: \"Group by...\", select: true, children: [_jsx(MenuItem, { value: \"strand\", children: \"Strand\" }), _jsx(MenuItem, { value: \"tag\", children: \"Tag\" })] }), type === 'tag' ? (_jsxs(_Fragment, { children: [_jsx(Typography, { color: \"textSecondary\", children: \"Examples: HP for haplotype, RG for read group, etc.\" }), _jsx(TextField, { value: tag, onChange: event => {\n                                    setGroupByTag(event.target.value);\n                                }, placeholder: \"Enter tag name\", error: isInvalid, helperText: isInvalid ? 'Not a valid tag' : '', autoComplete: \"off\", \"data-testid\": \"group-tag-name\", slotProps: {\n                                    htmlInput: {\n                                        maxLength: 2,\n                                        'data-testid': 'group-tag-name-input',\n                                    },\n                                } }), error ? (_jsx(ErrorMessage, { error: error })) : loading ? (_jsx(LoadingEllipses, { title: \"Loading unique tags\" })) : tagSet ? (_jsxs(\"div\", { children: [_jsxs(\"div\", { children: [\"Found unique \", tag, \" values:\"] }), _jsx(\"div\", { children: tagSet.join(', ') })] })) : null] })) : null] }), _jsxs(DialogActions, { children: [_jsx(Button, { variant: \"contained\", color: \"primary\", type: \"submit\", disabled: !tagSet, autoFocus: true, onClick: () => {\n                            const track = getContainingTrack(model);\n                            const trackConf = structuredClone(getSnapshot(track.configuration));\n                            const session = getSession(model);\n                            const view = getContainingView(model);\n                            if (type === 'tag') {\n                                if (tagSet) {\n                                    const ret = [...tagSet, undefined];\n                                    for (const tagValue of ret) {\n                                        const t1 = `${trackConf.trackId}-${tag}:${tagValue}-${+Date.now()}-sessionTrack`;\n                                        session.addTrackConf({\n                                            ...trackConf,\n                                            trackId: t1,\n                                            name: `${trackConf.name} (${tag}:${tagValue})`,\n                                            displays: [\n                                                {\n                                                    displayId: `${t1}-LinearAlignmentsDisplay`,\n                                                    type: 'LinearAlignmentsDisplay',\n                                                    pileupDisplay: {\n                                                        displayId: `${t1}-LinearAlignmentsDisplay-LinearPileupDisplay`,\n                                                        type: 'LinearPileupDisplay',\n                                                        filterBy: {\n                                                            ...defaultFilterFlags,\n                                                            tagFilter: {\n                                                                tag,\n                                                                value: tagValue,\n                                                            },\n                                                        },\n                                                    },\n                                                },\n                                            ],\n                                        });\n                                        view.showTrack(t1);\n                                    }\n                                }\n                            }\n                            else if (type === 'strand') {\n                                const t1 = `${trackConf.trackId}-${tag}:(-)-${+Date.now()}-sessionTrack`;\n                                const t2 = `${trackConf.trackId}-${tag}:(+)-${+Date.now()}-sessionTrack`;\n                                session.addTrackConf({\n                                    ...trackConf,\n                                    trackId: t1,\n                                    name: `${trackConf.name} (-)`,\n                                    displays: [\n                                        {\n                                            displayId: `${t1}-LinearAlignmentsDisplay`,\n                                            type: 'LinearAlignmentsDisplay',\n                                            pileupDisplay: {\n                                                displayId: `${t1}-LinearAlignmentsDisplay-LinearPileupDisplay`,\n                                                type: 'LinearPileupDisplay',\n                                                filterBy: negFlags,\n                                            },\n                                        },\n                                        {\n                                            displayId: `${t1}-LinearSNPCoverageDisplay`,\n                                            type: 'LinearSNPCoverageDisplay',\n                                            filterBy: negFlags,\n                                        },\n                                    ],\n                                });\n                                session.addTrackConf({\n                                    ...trackConf,\n                                    trackId: t2,\n                                    name: `${trackConf.name} (+)`,\n                                    displays: [\n                                        {\n                                            displayId: `${t2}-LinearAlignmentsDisplay`,\n                                            type: 'LinearAlignmentsDisplay',\n                                            pileupDisplay: {\n                                                displayId: `${t2}-LinearAlignmentsDisplay-LinearPileupDisplay`,\n                                                type: 'LinearPileupDisplay',\n                                                filterBy: posFlags,\n                                            },\n                                        },\n                                        {\n                                            displayId: `${t2}-LinearSNPCoverageDisplay`,\n                                            type: 'LinearSNPCoverageDisplay',\n                                            filterBy: posFlags,\n                                        },\n                                    ],\n                                });\n                                view.showTrack(t1);\n                                view.showTrack(t2);\n                            }\n                            handleClose();\n                        }, children: \"Submit\" }), _jsx(Button, { variant: \"contained\", color: \"secondary\", onClick: () => {\n                            handleClose();\n                        }, children: \"Cancel\" })] })] }));\n});\nexport default GroupByTagDialog;\n"],"names":["GroupByTagDialog","observer","props","model","handleClose","tag","setGroupByTag","useState","tagSet","setGroupByTagSet","loading","setLoading","error","setError","validTag","isInvalid","debouncedTag","useDebounce","type","setType","useEffect","vals","getUniqueTags","getContainingView","e","_jsxs","Dialog","DialogContent","_jsx","Typography","TextField","event","MenuItem","_Fragment","ErrorMessage","LoadingEllipses","DialogActions","Button","track","getContainingTrack","trackConf","getSnapshot","session","getSession","view","ret","tagValue","t1","defaultFilterFlags","t2","negFlags","posFlags"],"mappings":"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","x_google_ignoreList":[0]}