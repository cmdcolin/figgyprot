import{y as B,u as C,ah as R}from"./index-BXtJZUZx.js";import{B as D}from"./index-7uUUtqbY.js";import{r as F}from"./rxjs-B_16j8uU.js";import{S as v}from"./index-Cef45cG-.js";import{p as j}from"./util-DTuZfkC4.js";function T(N){const e=N.trim().split(" "),t=e.indexOf("qseqid");if(t===-1)throw new Error('Missing required column "qseqid"');const n=e.indexOf("sseqid");if(n===-1)throw new Error('Missing required column "sseqid"');const u=e.indexOf("qstart");if(u===-1)throw new Error('Missing required column "qstart"');const r=e.indexOf("qend");if(r===-1)throw new Error('Missing required column "qend"');const o=e.indexOf("sstart");if(o===-1)throw new Error('Missing required column "sstart"');const f=e.indexOf("send");if(f===-1)throw new Error('Missing required column "send"');const q=new Map(e.map((d,s)=>[d,s]).filter(d=>!["qseqid","sseqid","qstart","qend","sstart","send"].includes(d[0])));return d=>{if(d.startsWith("#"))return;const s=d.split("	"),c=s[t],b=s[n],a=s[u],i=s[r],y=s[o],p=s[f];if(!(c&&b&&a&&i&&y&&p)){console.warn("Invalid BLAST line"),console.warn(d);return}const m={qseqid:c,sseqid:b,qstart:Number.parseInt(a),qend:Number.parseInt(i),sstart:Number.parseInt(y),send:Number.parseInt(p)};for(const[l,h]of q.entries()){const g=s[h];g&&(m[l]=g)}return m}}class U extends D.BaseFeatureDataAdapter{getData(e){return this.data||(this.data=this.setup(e).catch(t=>{throw this.data=void 0,t})),this.data}async setup(e){const t=B.readConfObject(this.config,"columns");return j(await C.fetchAndMaybeUnzip(R.openLocation(B.readConfObject(this.config,"blastTableLocation"),this.pluginManager),e),T(t),e)}async hasDataForRefName(){return!0}getAssemblyNames(){const e=this.getConf("assemblyNames");if(e.length===0){const t=this.getConf("queryAssembly"),n=this.getConf("targetAssembly");return[t,n]}return e}async getRefNames(e={}){var t;const n=(t=e.regions)===null||t===void 0?void 0:t[0].assemblyName,u=await this.getData(e),r=this.getAssemblyNames().indexOf(n);if(r!==-1){const o=new Set;for(const f of u)o.add(r===0?f.qseqid:f.sseqid);return[...o]}return console.warn("Unable to do ref renaming on adapter"),[]}getFeatures(e,t={}){return F.ObservableCreate(async n=>{const u=await this.getData(t),[r,o]=this.getAssemblyNames(),{refName:f,assemblyName:q,start:d,end:s}=e;if(q!==o&&q!==r){console.warn(`${q} not found in this adapter`),n.complete();return}for(let c=0;c<u.length;c++){const b=u[c];let a,i,y,p,m,l,h,g;const{qseqid:w,sseqid:x,qstart:A,qend:I,sstart:E,send:O,...L}=b;q===r?(a=A,i=I,y=w,p=r,m=E,l=O,h=x,g=o):(a=E,i=O,y=x,p=o,m=A,l=I,h=w,g=r);let M=1,S=1;a>i&&([a,i]=[i,a],M=-1),m>l&&([m,l]=[l,m],S=-1),y===f&&C.doesIntersect2(d,s,a,i)&&n.next(new v({uniqueId:c+q,assemblyName:p,start:a,end:i,type:"match",refName:y,strand:M*S,syntenyId:c,...L,mate:{start:m,end:l,refName:h,assemblyName:g}}))}n.complete()})}}U.capabilities=["getFeatures","getRefNames"];export{U as default};
//# sourceMappingURL=BlastTabularAdapter-CmRPRcs4.js.map
