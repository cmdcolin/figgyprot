{"version":3,"file":"VcfTabixAdapter-Cf3zXKGg.js","sources":["../../node_modules/@jbrowse/plugin-variants/esm/VcfTabixAdapter/VcfTabixAdapter.js"],"sourcesContent":["import { TabixIndexedFile } from '@gmod/tabix';\nimport VcfParser from '@gmod/vcf';\nimport { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter';\nimport { fetchAndMaybeUnzipText, updateStatus } from '@jbrowse/core/util';\nimport { openLocation } from '@jbrowse/core/util/io';\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs';\nimport VcfFeature from '../VcfFeature';\nexport default class VcfTabixAdapter extends BaseFeatureDataAdapter {\n    async configurePre(_opts) {\n        const vcfGzLocation = this.getConf('vcfGzLocation');\n        const location = this.getConf(['index', 'location']);\n        const indexType = this.getConf(['index', 'indexType']);\n        const filehandle = openLocation(vcfGzLocation, this.pluginManager);\n        const isCSI = indexType === 'CSI';\n        const vcf = new TabixIndexedFile({\n            filehandle,\n            csiFilehandle: isCSI\n                ? openLocation(location, this.pluginManager)\n                : undefined,\n            tbiFilehandle: !isCSI\n                ? openLocation(location, this.pluginManager)\n                : undefined,\n            chunkCacheSize: 50 * 2 ** 20,\n        });\n        return {\n            vcf,\n            parser: new VcfParser({\n                header: await vcf.getHeader(),\n            }),\n        };\n    }\n    async configurePre2() {\n        if (!this.configured) {\n            this.configured = this.configurePre().catch((e) => {\n                this.configured = undefined;\n                throw e;\n            });\n        }\n        return this.configured;\n    }\n    async configure(opts) {\n        const { statusCallback = () => { } } = opts || {};\n        return updateStatus('Downloading index', statusCallback, () => this.configurePre2());\n    }\n    async getRefNames(opts = {}) {\n        const { vcf } = await this.configure(opts);\n        return vcf.getReferenceSequenceNames(opts);\n    }\n    async getHeader(opts) {\n        const { vcf } = await this.configure(opts);\n        return vcf.getHeader();\n    }\n    async getMetadata(opts) {\n        const { parser } = await this.configure(opts);\n        return parser.getMetadata();\n    }\n    getFeatures(query, opts = {}) {\n        return ObservableCreate(async (observer) => {\n            const { refName, start, end } = query;\n            const { statusCallback = () => { } } = opts;\n            const { vcf, parser } = await this.configure(opts);\n            await updateStatus('Downloading variants', statusCallback, () => vcf.getLines(refName, start, end, {\n                lineCallback: (line, fileOffset) => {\n                    observer.next(new VcfFeature({\n                        variant: parser.parseLine(line),\n                        parser,\n                        id: `${this.id}-vcf-${fileOffset}`,\n                    }));\n                },\n                ...opts,\n            }));\n            observer.complete();\n        }, opts.stopToken);\n    }\n    async getSources() {\n        const conf = this.getConf('samplesTsvLocation');\n        if (conf.uri === '' || conf.uri === '/path/to/samples.tsv') {\n            const { parser } = await this.configure();\n            return parser.samples.map(name => ({\n                name,\n            }));\n        }\n        else {\n            const txt = await fetchAndMaybeUnzipText(openLocation(conf, this.pluginManager));\n            const lines = txt.split(/\\n|\\r\\n|\\r/);\n            const header = lines[0].split('\\t');\n            const { parser } = await this.configure();\n            const s = new Set(parser.samples);\n            const ret = lines\n                .slice(1)\n                .filter(f => !!f)\n                .map(line => {\n                const [name, ...rest] = line.split('\\t');\n                return {\n                    ...Object.fromEntries(rest.map((c, idx) => [header[idx + 1], c])),\n                    name: name,\n                };\n            });\n            const missing = ret.filter(f => !s.has(f.name));\n            if (missing.length) {\n                console.warn('Samples in metadata file not in VCF:', ret.filter(f => !s.has(f.name)));\n            }\n            return ret.filter(f => s.has(f.name));\n        }\n    }\n    freeResources() { }\n}\n"],"names":["VcfTabixAdapter","BaseFeatureDataAdapter","_opts","vcfGzLocation","location","indexType","filehandle","openLocation","isCSI","vcf","TabixIndexedFile","VcfParser","opts","statusCallback","updateStatus","parser","query","ObservableCreate","observer","refName","start","end","line","fileOffset","VcfFeature","conf","name","lines","fetchAndMaybeUnzipText","header","ret","f","rest","c","idx"],"mappings":"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","x_google_ignoreList":[0]}